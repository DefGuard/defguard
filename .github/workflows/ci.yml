name: Continuous integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: self-hosted
    container: rust:latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: defguard
          POSTGRES_USER: defguard
          POSTGRES_PASSWORD: defguard
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Debug
        run: echo ${{ github.ref_name }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set database URL
        run: sed -i -e 's,localhost,postgres,' .env
      - name: Install protoc
        run: apt-get update && apt-get -y install protobuf-compiler
      - name: Check format
        run: |
          rustup component add rustfmt
          cargo fmt -- --check
      - name: Run tests
        env:
          DEFGUARD_DB_HOST: postgres
          DEFGUARD_DB_PORT: 5432
          DEFGUARD_DB_NAME: defguard
          DEFGUARD_DB_USER: defguard
          DEFGUARD_DB_PASSWORD: defguard
          SQLX_OFFLINE: true
        run: cargo test --locked --no-fail-fast
