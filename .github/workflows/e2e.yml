name: E2E tests

on:
  workflow_call:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    runs-on:
      - codebuild-defguard-core-runner-${{ github.run_id }}-${{ github.run_attempt }}
        instance-size:2xlarge

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Export image tag
        run: |
          # strip "refs/heads.” to get just the branch name
          BRANCH=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH" == release/* ]]; then
            # replace '/' with '-' on release branches
            IMAGE_TAG=${BRANCH//\//-}
          else
            # main/dev branch
            IMAGE_TAG=$BRANCH
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "E2E tests will run on IMAGE_TAG=$IMAGE_TAG"

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: "./e2e/.nvmrc"

      - name: Install pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Pull images
        run: docker compose --file './docker-compose.e2e.yaml' pull

      - name: Install E2E dependencies
        working-directory: ./e2e
        run: pnpm install --frozen-lockfile

      - name: Install playwright chromium
        working-directory: ./e2e
        run: npx playwright install chromium

      - name: run tests
        working-directory: ./e2e
        run: pnpm test

      - name: Stop compose
        if: always()
        run: docker compose --file './docker-compose.e2e.yaml' down

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: |
            ./e2e/playwright-report
          retention-days: 7

  trigger-dev-deploy:
    needs: test
    if: ${{ github.event_name != 'pull_request' && github.ref_name == 'dev' }}
    uses: ./.github/workflows/dev-deployment.yml
    secrets: inherit

  trigger-staging-deploy:
    needs: test
    if: ${{ github.event_name != 'pull_request' && startsWith(github.ref_name, 'release/') }}
    uses: ./.github/workflows/staging-deployment.yml
    secrets: inherit
