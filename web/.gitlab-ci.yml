stages:
  - changelog
  - lint
  - build
  - tag
  - apply
  - deploy

default:
  tags:
    - kubernetes

services:
  - name: docker:20-dind
    command: ["--mtu=1440"]

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG: ${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}
  REGISTRY: registry.teonite.net

.build-image:
  stage: build
  image: docker:20
  before_script:
    # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27215
    - until docker info; do sleep 2; done
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_SECRET}" ${REGISTRY}
  after_script:
    - docker logout ${REGISTRY}

build-frontend:
  extends: .build-image
  script:
    - cd web
    - docker build --pull -t ${REGISTRY}/defguard/frontend:${IMAGE_TAG} .
    - docker push ${REGISTRY}/defguard/frontend:${IMAGE_TAG}
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME

build-docs:
  extends: .build-image
  script:
    - docker build --pull -t ${REGISTRY}/defguard/frontend-docs:${IMAGE_TAG} -f ./Dockerfile.docs.ci .
    - docker push ${REGISTRY}/defguard/frontend-docs:${IMAGE_TAG}
    - docker tag ${REGISTRY}/defguard/frontend-docs:${IMAGE_TAG} ${REGISTRY}/defguard/frontend-docs:latest
    - docker push ${REGISTRY}/defguard/frontend-docs:latest
  only:
    - master

build-ladle:
  extends: .build-image
  script:
    - cd web
    - docker build --pull -t ${REGISTRY}/defguard/frontend-ladle:${IMAGE_TAG} -f ./Dockerfile.ladle .
    - docker push ${REGISTRY}/defguard/frontend-ladle:${IMAGE_TAG}
    - docker tag ${REGISTRY}/defguard/frontend-ladle:${IMAGE_TAG} ${REGISTRY}/defguard/frontend-ladle:latest
    - docker push ${REGISTRY}/defguard/frontend-ladle:latest
  only:
    - master

tag-latest:
  extends: .build-image
  stage: tag
  script:
    - docker pull ${REGISTRY}/defguard/frontend:${IMAGE_TAG}
    - docker tag ${REGISTRY}/defguard/frontend:${IMAGE_TAG} ${REGISTRY}/defguard/frontend:latest
    - docker push ${REGISTRY}/defguard/frontend:latest
  only:
    - tags
  except:
    - branches

eslint:
  stage: lint
  image: node:19
  before_script:
    - npm i -g pnpm
    - pnpm install
  script:
    - pnpm lint

.kubernetes:
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  dependencies: []
  before_script:
    - kubectl config get-contexts
    - kubectl config use-context orion/frontend:defguard

apply-auto-dev:
  extends: .kubernetes
  stage: apply
  script:
    - kubectl -n orion-dev apply -k ./k8s/overlays/dev
  only:
    - master
  
apply-auto-prod:
  extends: .kubernetes
  stage: apply
  script:
    - kubectl -n orion apply -k ./k8s/overlays/prod
  only:
    - tags
  except:
    - branches

apply-manual-dev:
  extends: .kubernetes
  stage: apply
  script:
    - kubectl -n orion-dev apply -k ./k8s/overlays/dev
  only:
    - master
  when: manual

apply-manual-prod:
  extends: .kubernetes
  stage: apply
  script:
    - kubectl -n orion apply -k ./k8s/overlays/prod
  only:
    - master
  when: manual

deploy-auto-dev:
  extends: .kubernetes
  stage: deploy
  script:
    - kubectl -n orion-dev set image deployment/frontend frontend=${REGISTRY}/defguard/frontend:${IMAGE_TAG}
    - kubectl -n orion-dev set image deployment/docs docs=${REGISTRY}/defguard/frontend-docs:${IMAGE_TAG}
    - kubectl -n orion-dev set image deployment/ladle ladle=${REGISTRY}/defguard/frontend-ladle:${IMAGE_TAG}
  only:
    - master

deploy-manual-dev:
  extends: .kubernetes
  stage: deploy
  script:
    - kubectl -n orion-dev set image deployment/frontend frontend=${REGISTRY}/defguard/frontend:${IMAGE_TAG}
  when: manual

deploy-manual-docs:
  extends: .kubernetes
  stage: deploy
  script:
    - kubectl -n orion-dev set image deployment/docs docs=${REGISTRY}/defguard/frontend-docs:${IMAGE_TAG}
  when: manual

deploy-manual-ladle:
  extends: .kubernetes
  stage: deploy
  script:
    - kubectl -n orion-dev set image deployment/ladle ladle=${REGISTRY}/defguard/frontend-ladle:${IMAGE_TAG}
  when: manual

deploy-auto-prod:
  extends: .kubernetes
  stage: deploy
  script:
    - kubectl -n orion set image deployment/frontend frontend=${REGISTRY}/defguard/frontend:${IMAGE_TAG}
  only:
    - tags
  except:
    - branches

deploy-manual-prod:
  extends: .kubernetes
  stage: deploy
  script:
    - kubectl -n orion set image deployment/frontend frontend=${REGISTRY}/defguard/frontend:${IMAGE_TAG}
  only:
    - master
  when: manual
