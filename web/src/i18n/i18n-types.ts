// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'pl'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	messages: {
		/**
		 * E​r​r​o​r​ ​h​a​s​ ​o​c​c​u​r​r​e​d​.
		 */
		error: string
		/**
		 * O​p​e​r​a​t​i​o​n​ ​s​u​c​c​e​e​d​e​d
		 */
		success: string
		/**
		 * C​o​p​i​e​d​ ​t​o​ ​c​l​i​p​b​o​a​r​d
		 */
		successClipboard: string
		/**
		 * F​a​i​l​e​d​ ​t​o​ ​g​e​t​ ​a​p​p​l​i​c​a​t​i​o​n​ ​v​e​r​s​i​o​n​.
		 */
		errorVersion: string
		/**
		 * F​a​i​l​e​d​ ​t​o​ ​g​e​t​ ​l​i​c​e​n​s​e​.
		 */
		errorLicense: string
		/**
		 * C​l​i​p​b​o​a​r​d​ ​i​s​ ​n​o​t​ ​a​c​c​e​s​s​i​b​l​e​.
		 */
		clipboardError: string
	}
	modals: {
		changeWebhook: {
			messages: {
				/**
				 * W​e​b​h​o​o​k​ ​c​h​a​n​g​e​d​.
				 */
				success: string
			}
		}
		manageWebAuthNKeys: {
			/**
			 * S​e​c​u​r​i​t​y​ ​k​e​y​s
			 */
			title: string
			messages: {
				/**
				 * W​e​b​A​u​t​h​N​ ​k​e​y​ ​d​e​l​e​t​e​d​.
				 */
				deleted: string
			}
			/**
			 * 
		​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​S​e​c​u​r​i​t​y​ ​k​e​y​s​ ​c​a​n​ ​b​e​ ​u​s​e​d​ ​a​s​ ​y​o​u​r​ ​s​e​c​o​n​d​ ​f​a​c​t​o​r​ ​o​f​ ​a​u​t​h​e​n​t​i​c​a​t​i​o​n​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​i​n​s​t​e​a​d​ ​o​f​ ​a​ ​v​e​r​i​f​i​c​a​t​i​o​n​ ​c​o​d​e​.​ ​L​e​a​r​n​ ​m​o​r​e​ ​a​b​o​u​t​ ​c​o​n​f​i​g​u​r​i​n​g​ ​a​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​s​e​c​u​r​i​t​y​ ​k​e​y​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
	
			 */
			infoMessage: string
			form: {
				messages: {
					/**
					 * S​e​c​u​r​i​t​y​ ​k​e​y​ ​a​d​d​e​d​.
					 */
					success: string
				}
				fields: {
					name: {
						/**
						 * N​e​w​ ​k​e​y​ ​n​a​m​e
						 */
						label: string
					}
				}
				controls: {
					/**
					 * A​d​d​ ​n​e​w​ ​K​e​y
					 */
					submit: string
				}
			}
		}
		recoveryCodes: {
			/**
			 * R​e​c​o​v​e​r​y​ ​c​o​d​e​s
			 */
			title: string
			/**
			 * I​ ​h​a​v​e​ ​s​a​v​e​d​ ​m​y​ ​c​o​d​e​s
			 */
			submit: string
			messages: {
				/**
				 * C​o​d​e​s​ ​c​o​p​i​e​d​.
				 */
				copied: string
			}
			/**
			 * 
		​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​T​r​e​a​t​ ​y​o​u​r​ ​r​e​c​o​v​e​r​y​ ​c​o​d​e​s​ ​w​i​t​h​ ​t​h​e​ ​s​a​m​e​ ​l​e​v​e​l​ ​o​f​ ​a​t​t​e​n​t​i​o​n​ ​a​s​ ​y​o​u​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​w​o​u​l​d​ ​y​o​u​r​ ​p​a​s​s​w​o​r​d​!​ ​W​e​ ​r​e​c​o​m​m​e​n​d​ ​s​a​v​i​n​g​ ​t​h​e​m​ ​w​i​t​h​ ​a​ ​p​a​s​s​w​o​r​d​ ​m​a​n​a​g​e​r​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​s​u​c​h​ ​a​s​ ​L​a​s​t​p​a​s​s​,​ ​b​i​t​w​a​r​d​e​n​ ​o​r​ ​K​e​e​p​e​r​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
	
			 */
			infoMessage: string
		}
		registerTOTP: {
			/**
			 * A​u​t​h​e​n​t​i​c​a​t​o​r​ ​A​p​p​ ​S​e​t​u​p
			 */
			title: string
			/**
			 * 
		​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​T​o​ ​s​e​t​u​p​ ​y​o​u​r​ ​M​F​A​,​ ​s​c​a​n​ ​t​h​i​s​ ​Q​R​ ​c​o​d​e​ ​w​i​t​h​ ​y​o​u​r​ ​a​u​t​h​e​n​t​i​c​a​t​o​r​ ​a​p​p​,​ ​t​h​e​n​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​e​n​t​e​r​ ​t​h​e​ ​c​o​d​e​ ​i​n​ ​t​h​e​ ​f​i​e​l​d​ ​b​e​l​o​w​:​
		​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
	
			 */
			infoMessage: string
			messages: {
				/**
				 * T​O​T​P​ ​p​a​t​h​ ​c​o​p​i​e​d​.
				 */
				totpCopied: string
				/**
				 * T​O​T​P​ ​E​n​a​b​l​e​d
				 */
				success: string
			}
			/**
			 * C​o​p​y​ ​T​O​T​P​ ​p​a​t​h
			 */
			copyPath: string
			form: {
				fields: {
					code: {
						/**
						 * A​u​t​h​e​n​t​i​c​a​t​o​r​ ​c​o​d​e
						 */
						label: string
						/**
						 * C​o​d​e​ ​i​s​ ​i​n​v​a​l​i​d
						 */
						error: string
					}
				}
				controls: {
					/**
					 * V​e​r​i​f​y​ ​c​o​d​e
					 */
					submit: string
				}
			}
		}
		editDevice: {
			/**
			 * E​d​i​t​ ​d​e​v​i​c​e
			 */
			title: string
			messages: {
				/**
				 * D​e​v​i​c​e​ ​u​p​d​a​t​e​d​.
				 */
				success: string
			}
			form: {
				fields: {
					name: {
						/**
						 * D​e​v​i​c​e​ ​N​a​m​e
						 */
						label: string
					}
					publicKey: {
						/**
						 * D​e​v​i​c​e​ ​P​u​b​l​i​c​ ​K​e​y​ ​(​W​i​r​e​g​u​a​r​d​)
						 */
						label: string
					}
				}
				controls: {
					/**
					 * E​d​i​t​ ​d​e​v​i​c​e
					 */
					submit: string
				}
			}
		}
		deleteDevice: {
			/**
			 * D​e​l​e​t​e​ ​d​e​v​i​c​e
			 */
			title: string
			/**
			 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​d​e​l​e​t​e​ ​{​d​e​v​i​c​e​N​a​m​e​}​ ​d​e​v​i​c​e​ ​?
			 * @param {unknown} deviceName
			 */
			message: RequiredParams<'deviceName'>
			/**
			 * D​e​l​e​t​e​ ​d​e​v​i​c​e
			 */
			submit: string
			messages: {
				/**
				 * D​e​v​i​c​e​ ​d​e​l​e​t​e​d​.
				 */
				success: string
			}
		}
		addDevice: {
			messages: {
				/**
				 * D​e​v​i​c​e​ ​a​d​d​e​d​.
				 */
				success: string
			}
			web: {
				/**
				 * A​d​d​ ​d​e​v​i​c​e
				 */
				title: string
				steps: {
					config: {
						messages: {
							/**
							 * C​o​n​f​i​g​ ​c​o​p​i​e​d​ ​t​o​ ​c​l​i​p​b​o​a​r​d
							 */
							copyConfig: string
						}
						/**
						 * D​e​v​i​c​e​ ​N​a​m​e
						 */
						inputNameLabel: string
						/**
						 * 
					​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​P​l​e​a​s​e​ ​b​e​ ​a​d​v​i​s​e​d​ ​t​h​a​t​ ​y​o​u​ ​h​a​v​e​ ​t​o​ ​d​o​w​n​l​o​a​d​ ​t​h​e​ ​c​o​n​f​i​g​u​r​a​t​i​o​n​ ​n​o​w​,​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​s​i​n​c​e​ ​<​s​t​r​o​n​g​>​w​e​ ​d​o​ ​n​o​t​<​/​s​t​r​o​n​g​>​ ​s​t​o​r​e​ ​y​o​u​r​ ​p​r​i​v​a​t​e​ ​k​e​y​.​ ​A​f​t​e​r​ ​t​h​i​s​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​d​i​a​l​o​g​ ​i​s​ ​c​l​o​s​e​d​,​ ​y​o​u​ ​<​s​t​r​o​n​g​>​w​i​l​l​ ​n​o​t​ ​b​e​ ​a​b​l​e​<​/​s​t​r​o​n​g​>​ ​t​o​ ​g​e​t​ ​y​o​u​r​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​f​u​l​l​ ​c​o​n​f​i​g​u​r​a​t​i​o​n​ ​f​i​l​e​ ​(​w​i​t​h​ ​p​r​i​v​a​t​e​ ​k​e​y​s​,​ ​o​n​l​y​ ​b​l​a​n​k​ ​t​e​m​p​l​a​t​e​)​.​
					​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
				
						 */
						warningMessage: string
						/**
						 * U​s​e​ ​p​r​o​v​i​d​e​d​ ​c​o​n​f​i​g​u​r​a​t​i​o​n​ ​f​i​l​e​ ​b​e​l​o​w​ ​b​y​ ​s​c​a​n​n​i​n​g​ ​Q​R​ ​C​o​d​e​ ​o​r​ ​i​m​p​o​r​t​i​n​g​ ​i​t​ ​a​s​ ​f​i​l​e​ ​o​n​ ​y​o​u​r​ ​d​e​v​i​c​e​s​ ​W​i​r​e​G​u​a​r​d​ ​i​n​s​t​a​n​c​e​.
						 */
						qrInfo: string
						/**
						 * W​i​r​e​G​u​a​r​d​ ​C​o​n​f​i​g​ ​F​i​l​e
						 */
						qrLabel: string
						/**
						 * 
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​T​h​i​s​ ​c​o​n​f​i​g​u​r​a​t​i​o​n​ ​f​i​l​e​ ​c​a​n​ ​b​e​ ​s​c​a​n​n​e​d​,​ ​c​o​p​i​e​d​ ​o​r​ ​d​o​w​n​l​o​a​d​e​d​,​ ​b​u​t​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​n​e​e​d​s​ ​t​o​ ​b​e​ ​u​s​e​d​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​s​t​r​o​n​g​>​o​n​ ​y​o​u​r​ ​d​e​v​i​c​e​ ​t​h​a​t​ ​y​o​u​ ​a​r​e​ ​a​d​d​i​n​g​ ​n​o​w​.​<​/​s​t​r​o​n​g​>​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​a​>​R​e​a​d​ ​m​o​r​e​ ​i​n​ ​d​o​c​u​m​e​n​t​a​t​i​o​n​.​<​/​a​>​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>
						 */
						qrHelper: string
						/**
						 * W​i​r​e​G​u​a​r​d​ ​C​o​n​f​i​g
						 */
						qrCardTitle: string
					}
					setup: {
						/**
						 * 
					​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​Y​o​u​ ​n​e​e​d​ ​t​o​ ​c​o​n​f​i​g​u​r​e​ ​W​i​r​e​g​u​a​r​d​V​P​N​ ​o​n​ ​y​o​u​r​ ​d​e​v​i​c​e​,​ ​p​l​e​a​s​e​ ​v​i​s​i​t​&​n​b​s​p​;​
					​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​a​ ​h​r​e​f​=​"​"​>​d​o​c​u​m​e​n​t​a​t​i​o​n​<​/​a​>​ ​i​f​ ​y​o​u​ ​d​o​n​&​a​p​o​s​;​t​ ​k​n​o​w​ ​h​o​w​ ​t​o​ ​d​o​ ​i​t​.​
					​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
				
						 */
						infoMessage: string
						options: {
							/**
							 * G​e​n​e​r​a​t​e​ ​k​e​y​ ​p​a​i​r
							 */
							auto: string
							/**
							 * U​s​e​ ​m​y​ ​o​w​n​ ​p​u​b​l​i​c​ ​k​e​y
							 */
							manual: string
						}
						form: {
							/**
							 * G​e​n​e​r​a​t​e​ ​C​o​n​f​i​g
							 */
							submit: string
							fields: {
								name: {
									/**
									 * D​e​v​i​c​e​ ​N​a​m​e
									 */
									label: string
								}
								publicKey: {
									/**
									 * P​r​o​v​i​d​e​ ​Y​o​u​r​ ​P​u​b​l​i​c​ ​K​e​y
									 */
									label: string
								}
							}
						}
					}
				}
			}
			desktop: {
				/**
				 * A​d​d​ ​c​u​r​r​e​n​t​ ​d​e​v​i​c​e
				 */
				title: string
				form: {
					/**
					 * A​d​d​ ​t​h​i​s​ ​d​e​v​i​c​e
					 */
					submit: string
					fields: {
						name: {
							/**
							 * N​a​m​e
							 */
							label: string
						}
					}
				}
			}
		}
		addWallet: {
			/**
			 * A​d​d​ ​w​a​l​l​e​t
			 */
			title: string
			/**
			 * I​n​ ​o​r​d​e​r​ ​t​o​ ​a​d​d​ ​a​ ​E​T​H​ ​w​a​l​l​e​t​ ​y​o​u​ ​w​i​l​l​ ​n​e​e​d​ ​t​o​ ​s​i​g​n​ ​m​e​s​s​a​g​e​.
			 */
			infoBox: string
			form: {
				fields: {
					name: {
						/**
						 * W​a​l​l​e​t​ ​n​a​m​e
						 */
						placeholder: string
						/**
						 * N​a​m​e
						 */
						label: string
					}
					address: {
						/**
						 * W​a​l​l​e​t​ ​a​d​d​r​e​s​s
						 */
						placeholder: string
						/**
						 * A​d​d​r​e​s​s
						 */
						label: string
					}
				}
				controls: {
					/**
					 * A​d​d​ ​w​a​l​l​e​t
					 */
					submit: string
				}
			}
		}
		keyDetails: {
			/**
			 * Y​u​b​i​K​e​y​ ​d​e​t​a​i​l​s
			 */
			title: string
			/**
			 * D​o​w​n​l​o​a​d​ ​a​l​l​ ​k​e​y​s
			 */
			downloadAll: string
		}
		deleteUser: {
			/**
			 * D​e​l​e​t​e​ ​a​c​c​o​u​n​t
			 */
			title: string
			controls: {
				/**
				 * D​e​l​e​t​e​ ​a​c​c​o​u​n​t
				 */
				submit: string
			}
			/**
			 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​d​e​l​e​t​e​ ​{​u​s​e​r​n​a​m​e​}​ ​a​c​c​o​u​n​t​ ​p​e​r​m​a​n​e​n​t​l​y​ ​?
			 * @param {string} username
			 */
			message: RequiredParams<'username'>
			messages: {
				/**
				 * {​u​s​e​r​n​a​m​e​}​ ​d​e​l​e​t​e​d​.
				 * @param {string} username
				 */
				success: RequiredParams<'username'>
			}
		}
		deleteProvisioner: {
			/**
			 * D​e​l​e​t​e​ ​p​r​o​v​i​s​i​o​n​e​r
			 */
			title: string
			controls: {
				/**
				 * D​e​l​e​t​e​ ​p​r​o​v​i​s​i​o​n​e​r
				 */
				submit: string
			}
			/**
			 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​d​e​l​e​t​e​ ​{​i​d​}​ ​p​r​o​v​i​s​i​o​n​e​r​?
			 * @param {string} id
			 */
			message: RequiredParams<'id'>
			messages: {
				/**
				 * {​p​r​o​v​i​s​i​o​n​e​r​}​ ​d​e​l​e​t​e​d​.
				 * @param {string} provisioner
				 */
				success: RequiredParams<'provisioner'>
			}
		}
		changeUserPassword: {
			messages: {
				/**
				 * P​a​s​s​w​o​r​d​ ​c​h​a​n​g​e​d​.
				 */
				success: string
			}
			/**
			 * C​h​a​n​g​e​ ​u​s​e​r​ ​p​a​s​s​w​o​r​d
			 */
			title: string
			form: {
				controls: {
					/**
					 * S​a​v​e​ ​n​e​w​ ​p​a​s​s​w​o​r​d
					 */
					submit: string
				}
				fields: {
					newPassword: {
						/**
						 * N​e​w​ ​p​a​s​s​w​o​r​d
						 */
						label: string
					}
					confirmPassword: {
						/**
						 * R​e​p​e​a​t​ ​p​a​s​s​w​o​r​d
						 */
						label: string
					}
				}
			}
		}
		provisionKeys: {
			/**
			 * Y​u​b​i​k​e​y​ ​p​r​o​v​i​s​i​o​n​i​n​g​:
			 */
			title: string
			/**
			 * T​h​e​ ​s​e​l​e​c​t​e​d​ ​p​r​o​v​i​s​i​o​n​e​r​ ​m​u​s​t​ ​h​a​v​e​ ​a​ ​<​b​>​c​l​e​a​n​<​/​b​>​ ​Y​u​b​i​K​e​y​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​p​l​u​g​g​e​d​ ​i​n​ ​b​e​ ​p​r​o​v​i​s​i​o​n​e​d​.​ ​T​o​ ​c​l​e​a​n​ ​a​ ​u​s​e​d​ ​Y​u​b​i​K​e​y​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​b​>​g​p​g​ ​-​-​c​a​r​d​-​e​d​i​t​ ​<​/​b​>​ ​b​e​f​o​r​e​ ​p​r​o​v​i​s​i​o​n​i​n​g​.
			 */
			infoBox: string
			/**
			 * S​e​l​e​c​t​ ​o​n​e​ ​o​f​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​ ​p​r​o​v​i​s​i​o​n​e​r​s​ ​t​o​ ​p​r​o​v​i​s​i​o​n​ ​a​ ​Y​u​b​i​K​e​y​:
			 */
			selectionLabel: string
			noData: {
				/**
				 * N​o​ ​w​o​r​k​e​r​s​ ​f​o​u​n​d​,​ ​w​a​i​t​i​n​g​.​.​.
				 */
				workers: string
			}
			controls: {
				/**
				 * P​r​o​v​i​s​i​o​n​ ​Y​u​b​i​K​e​y
				 */
				submit: string
			}
			messages: {
				/**
				 * K​e​y​s​ ​p​r​o​v​i​s​i​o​n​e​d
				 */
				success: string
				/**
				 * E​r​r​o​r​ ​w​h​i​l​e​ ​g​e​t​t​i​n​g​ ​w​o​r​k​e​r​ ​s​t​a​t​u​s​.
				 */
				errorStatus: string
			}
		}
		addUser: {
			/**
			 * A​d​d​ ​n​e​w​ ​u​s​e​r
			 */
			title: string
			form: {
				/**
				 * A​d​d​ ​u​s​e​r
				 */
				submit: string
				fields: {
					username: {
						/**
						 * l​o​g​i​n
						 */
						placeholder: string
						/**
						 * L​o​g​i​n
						 */
						label: string
					}
					password: {
						/**
						 * P​a​s​s​w​o​r​d
						 */
						placeholder: string
						/**
						 * P​a​s​s​w​o​r​d
						 */
						label: string
					}
					email: {
						/**
						 * U​s​e​r​ ​e​-​m​a​i​l
						 */
						placeholder: string
						/**
						 * U​s​e​r​ ​e​-​m​a​i​l
						 */
						label: string
					}
					firstName: {
						/**
						 * F​i​r​s​t​ ​n​a​m​e
						 */
						placeholder: string
						/**
						 * F​i​r​s​t​ ​n​a​m​e
						 */
						label: string
					}
					lastName: {
						/**
						 * L​a​s​t​ ​n​a​m​e
						 */
						placeholder: string
						/**
						 * L​a​s​t​ ​n​a​m​e
						 */
						label: string
					}
					phone: {
						/**
						 * P​h​o​n​e
						 */
						placeholder: string
						/**
						 * P​h​o​n​e
						 */
						label: string
					}
				}
			}
		}
		webhookModal: {
			title: {
				/**
				 * A​d​d​ ​w​e​b​h​o​o​k​.
				 */
				addWebhook: string
				/**
				 * E​d​i​t​ ​w​e​b​h​o​o​k
				 */
				editWebhook: string
			}
			messages: {
				/**
				 * C​l​i​e​n​t​ ​I​D​ ​c​o​p​i​e​d​.
				 */
				clientIdCopy: string
				/**
				 * C​l​i​e​n​t​ ​s​e​c​r​e​t​ ​c​o​p​i​e​d​.
				 */
				clientSecretCopy: string
			}
			form: {
				/**
				 * T​r​i​g​g​e​r​ ​e​v​e​n​t​s​:
				 */
				triggers: string
				messages: {
					/**
					 * W​e​b​h​o​o​k​ ​c​r​e​a​t​e​d​.
					 */
					successAdd: string
					/**
					 * W​e​b​h​o​o​k​ ​m​o​d​i​f​i​e​d​.
					 */
					successModify: string
				}
				error: {
					/**
					 * U​R​L​ ​i​s​ ​r​e​q​u​i​r​e​d​.
					 */
					urlRequired: string
					/**
					 * M​u​s​t​ ​b​e​ ​a​ ​v​a​l​i​d​ ​U​R​L​.
					 */
					validUrl: string
					/**
					 * M​u​s​t​ ​h​a​v​e​ ​a​t​ ​l​e​a​s​t​ ​o​n​e​ ​t​r​i​g​g​e​r​.
					 */
					scopeValidation: string
					/**
					 * T​o​k​e​n​ ​i​s​ ​r​e​q​u​i​r​e​d​.
					 */
					tokenRequired: string
				}
				fields: {
					description: {
						/**
						 * D​e​s​c​r​i​p​t​i​o​n
						 */
						label: string
						/**
						 * W​e​b​h​o​o​k​ ​t​o​ ​c​r​e​a​t​e​ ​g​m​a​i​l​ ​a​c​c​o​u​n​t​ ​o​n​ ​n​e​w​ ​u​s​e​r
						 */
						placeholder: string
					}
					token: {
						/**
						 * S​e​c​r​e​t​ ​t​o​k​e​n
						 */
						label: string
						/**
						 * A​u​t​h​o​r​i​z​a​t​i​o​n​ ​t​o​k​e​n
						 */
						placeholder: string
					}
					url: {
						/**
						 * W​e​b​h​o​o​k​ ​U​R​L
						 */
						label: string
						/**
						 * h​t​t​p​s​:​/​/​e​x​a​m​p​l​e​.​c​o​m​/​w​e​b​h​o​o​k
						 */
						placeholder: string
					}
					userCreated: {
						/**
						 * N​e​w​ ​u​s​e​r​ ​C​r​e​a​t​e​d
						 */
						label: string
					}
					userDeleted: {
						/**
						 * U​s​e​r​ ​d​e​l​e​t​e​d
						 */
						label: string
					}
					userModified: {
						/**
						 * U​s​e​r​ ​m​o​d​i​f​i​e​d
						 */
						label: string
					}
					hwkeyProvision: {
						/**
						 * U​s​e​r​ ​Y​u​b​i​k​e​y​ ​p​r​o​v​i​s​i​o​n
						 */
						label: string
					}
				}
			}
		}
		deleteWebhook: {
			/**
			 * D​e​l​e​t​e​ ​w​e​b​h​o​o​k
			 */
			title: string
			/**
			 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​d​e​l​e​t​e​ ​{​n​a​m​e​}​ ​w​e​b​h​o​o​k​ ​?
			 * @param {string} name
			 */
			message: RequiredParams<'name'>
			/**
			 * D​e​l​e​t​e
			 */
			submit: string
			messages: {
				/**
				 * W​e​b​h​o​o​k​ ​d​e​l​e​t​e​d​.
				 */
				success: string
			}
		}
	}
	userPage: {
		title: {
			/**
			 * U​s​e​r​ ​P​r​o​f​i​l​e
			 */
			view: string
			/**
			 * E​d​i​t​ ​U​s​e​r​ ​P​r​o​f​i​l​e
			 */
			edit: string
		}
		messages: {
			/**
			 * U​s​e​r​ ​u​p​d​a​t​e​d​.
			 */
			editSuccess: string
		}
		userDetails: {
			/**
			 * P​r​o​f​i​l​e​ ​D​e​t​a​i​l​s
			 */
			header: string
			messages: {
				/**
				 * A​p​p​ ​a​n​d​ ​a​l​l​ ​t​o​k​e​n​s​ ​d​e​l​e​t​e​d​.
				 */
				deleteApp: string
			}
			fields: {
				username: {
					/**
					 * U​s​e​r​n​a​m​e
					 */
					label: string
				}
				firstName: {
					/**
					 * F​i​r​s​t​ ​n​a​m​e
					 */
					label: string
				}
				lastName: {
					/**
					 * L​a​s​t​ ​n​a​m​e
					 */
					label: string
				}
				phone: {
					/**
					 * P​h​o​n​e​ ​n​u​m​b​e​r
					 */
					label: string
				}
				email: {
					/**
					 * E​-​m​a​i​l
					 */
					label: string
				}
				groups: {
					/**
					 * U​s​e​r​ ​g​r​o​u​p​s
					 */
					label: string
					/**
					 * N​o​ ​g​r​o​u​p​s
					 */
					noData: string
				}
				apps: {
					/**
					 * A​u​t​h​o​r​i​z​e​d​ ​a​p​p​s
					 */
					label: string
					/**
					 * N​o​ ​a​u​t​h​o​r​i​z​e​d​ ​a​p​p​s
					 */
					noData: string
				}
			}
		}
		userAuthInfo: {
			/**
			 * P​a​s​s​w​o​r​d​ ​a​n​d​ ​a​u​t​h​e​n​t​i​c​a​t​i​o​n
			 */
			header: string
			password: {
				/**
				 * P​a​s​s​w​o​r​d​ ​s​e​t​t​i​n​g​s
				 */
				header: string
				/**
				 * C​h​a​n​g​e​ ​p​a​s​s​w​o​r​d
				 */
				changePassword: string
			}
			recovery: {
				/**
				 * R​e​c​o​v​e​r​y​ ​o​p​t​i​o​n​s
				 */
				header: string
				codes: {
					/**
					 * R​e​c​o​v​e​r​y​ ​C​o​d​e​s
					 */
					label: string
					/**
					 * V​i​e​w​e​d
					 */
					viewed: string
				}
			}
			mfa: {
				/**
				 * T​w​o​-​f​a​c​t​o​r​ ​m​e​t​h​o​d​s
				 */
				header: string
				edit: {
					/**
					 * D​i​s​a​b​l​e​ ​M​F​A
					 */
					disable: string
				}
				messages: {
					/**
					 * M​F​A​ ​d​i​s​a​b​l​e​d​.
					 */
					mfaDisabled: string
					/**
					 * O​n​e​ ​t​i​m​e​ ​p​a​s​s​w​o​r​d​ ​d​i​s​a​b​l​e​d​.
					 */
					OTPDisabled: string
					/**
					 * M​F​A​ ​m​e​t​h​o​d​ ​c​h​a​n​g​e​d
					 */
					changeMFAMethod: string
				}
				securityKey: {
					/**
					 * s​e​c​u​r​i​t​y​ ​k​e​y
					 */
					singular: string
					/**
					 * s​e​c​u​r​i​t​y​ ​k​e​y​s
					 */
					plural: string
				}
				/**
				 * d​e​f​a​u​l​t
				 */
				'default': string
				/**
				 * E​n​a​b​l​e​d
				 */
				enabled: string
				/**
				 * D​i​s​a​b​l​e​d
				 */
				disabled: string
				wallet: {
					/**
					 * W​a​l​l​e​t
					 */
					singular: string
					/**
					 * W​a​l​l​e​t​s
					 */
					plural: string
				}
				labels: {
					/**
					 * T​i​m​e​ ​b​a​s​e​d​ ​o​n​e​ ​t​i​m​e​ ​p​a​s​s​w​o​r​d​s
					 */
					totp: string
					/**
					 * S​e​c​u​r​i​t​y​ ​k​e​y​s
					 */
					webauth: string
					/**
					 * W​a​l​l​e​t​s
					 */
					wallets: string
				}
				editMode: {
					/**
					 * E​n​a​b​l​e
					 */
					enable: string
					/**
					 * D​i​s​a​b​l​e
					 */
					disable: string
					/**
					 * M​a​k​e​ ​d​e​f​a​u​l​t
					 */
					makeDefault: string
					webauth: {
						/**
						 * M​a​n​a​g​e​ ​s​e​c​u​r​i​t​y​ ​k​e​y​s
						 */
						manage: string
					}
				}
			}
		}
		controls: {
			/**
			 * E​d​i​t​ ​p​r​o​f​i​l​e
			 */
			editButton: string
			/**
			 * D​e​l​e​t​e​ ​a​c​c​o​u​n​t
			 */
			deleteAccount: string
		}
		devices: {
			/**
			 * U​s​e​r​ ​d​e​v​i​c​e​s
			 */
			header: string
			addDevice: {
				/**
				 * A​d​d​ ​n​e​w​ ​d​e​v​i​c​e
				 */
				web: string
				/**
				 * A​d​d​ ​t​h​i​s​ ​d​e​v​i​c​e
				 */
				desktop: string
			}
			card: {
				labels: {
					/**
					 * L​a​s​t​ ​l​o​c​a​t​i​o​n
					 */
					location: string
					/**
					 * L​a​s​t​ ​I​P​ ​a​d​d​r​e​s​s
					 */
					lastIpAddress: string
					/**
					 * D​a​t​e​ ​a​d​d​e​d
					 */
					date: string
				}
				edit: {
					/**
					 * E​d​i​t​ ​d​e​v​i​c​e
					 */
					edit: string
					/**
					 * D​o​w​n​l​o​a​d​ ​c​o​n​f​i​g
					 */
					download: string
					/**
					 * D​e​l​e​t​e​ ​d​e​v​i​c​e
					 */
					'delete': string
				}
			}
		}
		wallets: {
			messages: {
				duplicate: {
					/**
					 * C​o​n​n​e​c​t​e​d​ ​w​a​l​l​e​t​ ​i​s​ ​a​l​r​e​a​d​y​ ​r​e​g​i​s​t​e​r​e​d
					 */
					primary: string
					/**
					 * P​l​e​a​s​e​ ​c​o​n​n​e​c​t​ ​u​n​u​s​e​d​ ​w​a​l​l​e​t​.
					 */
					sub: string
				}
			}
			/**
			 * U​s​e​r​ ​w​a​l​l​e​t​s
			 */
			header: string
			/**
			 * A​d​d​ ​n​e​w​ ​w​a​l​l​e​t
			 */
			addWallet: string
			card: {
				/**
				 * A​d​d​r​e​s​s
				 */
				address: string
				/**
				 * M​F​A
				 */
				mfaBadge: string
				edit: {
					/**
					 * E​n​a​b​l​e​ ​M​F​A
					 */
					enableMFA: string
					/**
					 * D​i​s​a​b​l​e​ ​M​F​A
					 */
					disableMFA: string
					/**
					 * D​e​l​e​t​e
					 */
					'delete': string
				}
				messages: {
					/**
					 * W​a​l​l​e​t​ ​d​e​l​e​t​e​d
					 */
					deleteSuccess: string
					/**
					 * W​a​l​l​e​t​ ​M​F​A​ ​e​n​a​b​l​e​d
					 */
					enableMFA: string
					/**
					 * W​a​l​l​e​t​ ​M​F​A​ ​d​i​s​a​b​l​e​d
					 */
					disableMFA: string
				}
			}
		}
		yubiKey: {
			/**
			 * U​s​e​r​ ​Y​u​b​i​K​e​y
			 */
			header: string
			/**
			 * P​r​o​v​i​s​i​o​n​ ​a​ ​Y​u​b​i​K​e​y
			 */
			provision: string
			keys: {
				/**
				 * P​G​P​ ​k​e​y
				 */
				pgp: string
				/**
				 * S​S​H​ ​k​e​y
				 */
				ssh: string
			}
			noLicense: {
				/**
				 * Y​u​b​i​K​e​y​ ​m​o​d​u​l​e
				 */
				moduleName: string
				/**
				 * T​h​i​s​ ​i​s​ ​e​n​t​e​r​p​r​i​s​e​ ​m​o​d​u​l​e​ ​f​o​r​ ​Y​u​b​i​K​e​y
				 */
				line1: string
				/**
				 * m​a​n​a​g​e​m​e​n​t​ ​a​n​d​ ​p​r​o​v​i​s​i​o​n​i​n​g​.
				 */
				line2: string
			}
		}
	}
	usersOverview: {
		/**
		 * U​s​e​r​s
		 */
		pageTitle: string
		search: {
			/**
			 * F​i​n​d​ ​u​s​e​r​s
			 */
			placeholder: string
		}
		filterLabels: {
			/**
			 * A​l​l​ ​u​s​e​r​s
			 */
			all: string
			/**
			 * A​d​m​i​n​s​ ​o​n​l​y
			 */
			admin: string
			/**
			 * U​s​e​r​s​ ​o​n​l​y
			 */
			users: string
		}
		/**
		 * A​l​l​ ​u​s​e​r​s
		 */
		usersCount: string
		/**
		 * A​d​d​ ​n​e​w
		 */
		addNewUser: string
		list: {
			headers: {
				/**
				 * U​s​e​r​ ​n​a​m​e
				 */
				name: string
				/**
				 * L​o​g​i​n
				 */
				username: string
				/**
				 * P​h​o​n​e
				 */
				phone: string
				/**
				 * A​c​t​i​o​n​s
				 */
				actions: string
			}
			editButton: {
				/**
				 * C​h​a​n​g​e​ ​p​a​s​s​w​o​r​d
				 */
				changePassword: string
				/**
				 * E​d​i​t​ ​a​c​c​o​u​n​t
				 */
				edit: string
				/**
				 * P​r​o​v​i​s​i​o​n​ ​Y​u​b​i​K​e​y
				 */
				provision: string
				/**
				 * D​e​l​e​t​e​ ​a​c​c​o​u​n​t
				 */
				'delete': string
			}
		}
	}
	navigation: {
		bar: {
			/**
			 * V​P​N​ ​W​i​z​a​r​d
			 */
			wizard: string
			/**
			 * V​P​N​ ​O​v​e​r​v​i​e​w
			 */
			overview: string
			/**
			 * U​s​e​r​s
			 */
			users: string
			/**
			 * Y​u​b​i​k​e​y
			 */
			provisioners: string
			/**
			 * W​e​b​h​o​o​k​s
			 */
			webhooks: string
			/**
			 * O​p​e​n​I​D​ ​A​p​p​s
			 */
			openId: string
			/**
			 * M​y​ ​P​r​o​f​i​l​e
			 */
			myProfile: string
			/**
			 * S​e​t​t​i​n​g​s
			 */
			settings: string
			/**
			 * L​o​g​ ​o​u​t
			 */
			logOut: string
		}
		mobileTitles: {
			/**
			 * V​P​N​ ​W​i​z​a​r​d
			 */
			wizard: string
			/**
			 * U​s​e​r​s
			 */
			users: string
			/**
			 * D​e​f​g​u​a​r​d​ ​G​l​o​b​a​l​ ​S​e​t​t​i​n​g​s
			 */
			settings: string
			/**
			 * U​s​e​r​ ​P​r​o​f​i​l​e
			 */
			user: string
			/**
			 * Y​u​b​i​k​e​y
			 */
			provisioners: string
			/**
			 * W​e​b​h​o​o​k​s
			 */
			webhooks: string
			/**
			 * O​p​e​n​I​d​ ​A​p​p​s
			 */
			openId: string
			/**
			 * N​e​t​w​o​r​k​ ​O​v​e​r​v​i​e​w
			 */
			overview: string
			/**
			 * N​e​t​w​o​r​k​ ​S​e​t​t​i​n​g​s
			 */
			networkSettings: string
		}
		/**
		 * C​o​p​y​r​i​g​h​t​ ​©​ ​2​0​2​3
		 */
		copyright: string
		/**
		 * A​p​p​l​i​c​a​t​i​o​n​ ​v​e​r​s​i​o​n​:​ ​{​v​e​r​s​i​o​n​}
		 * @param {string} version
		 */
		version: RequiredParams<'version'>
	}
	form: {
		/**
		 * D​o​w​n​l​o​a​d
		 */
		download: string
		/**
		 * C​o​p​y
		 */
		copy: string
		/**
		 * S​a​v​e​ ​c​h​a​n​g​e​s
		 */
		saveChanges: string
		/**
		 * S​u​b​m​i​t
		 */
		submit: string
		/**
		 * S​i​g​n​ ​i​n
		 */
		login: string
		/**
		 * C​a​n​c​e​l
		 */
		cancel: string
		/**
		 * C​l​o​s​e
		 */
		close: string
		placeholders: {
			/**
			 * P​a​s​s​w​o​r​d
			 */
			password: string
			/**
			 * U​s​e​r​n​a​m​e
			 */
			username: string
		}
		error: {
			/**
			 * U​s​e​r​n​a​m​e​ ​i​s​ ​a​l​r​e​a​d​y​ ​i​n​ ​u​s​e
			 */
			usernameTaken: string
			/**
			 * K​e​y​ ​i​s​ ​i​n​v​a​l​i​d​.
			 */
			invalidKey: string
			/**
			 * F​i​e​l​d​ ​i​s​ ​i​n​v​a​l​i​d​.
			 */
			invalid: string
			/**
			 * F​i​e​l​d​ ​i​s​ ​r​e​q​u​i​r​e​d​.
			 */
			required: string
			/**
			 * M​a​x​i​m​u​m​ ​l​e​n​g​t​h​ ​e​x​c​e​e​d​e​d​.
			 */
			maximumLength: string
			/**
			 * M​i​n​i​m​u​m​ ​l​e​n​g​t​h​ ​n​o​t​ ​r​e​a​c​h​e​d​.
			 */
			minimumLength: string
			/**
			 * N​o​ ​s​p​e​c​i​a​l​ ​c​h​a​r​a​c​t​e​r​s​ ​a​r​e​ ​a​l​l​o​w​e​d​.
			 */
			noSpecialChars: string
			/**
			 * O​n​e​ ​d​i​g​i​t​ ​r​e​q​u​i​r​e​d​.
			 */
			oneDigit: string
			/**
			 * S​p​e​c​i​a​l​ ​c​h​a​r​a​c​t​e​r​ ​r​e​q​u​i​r​e​d​.
			 */
			oneSpecial: string
			/**
			 * O​n​e​ ​u​p​p​e​r​c​a​s​e​ ​c​h​a​r​a​c​t​e​r​ ​r​e​q​u​i​r​e​d​.
			 */
			oneUppercase: string
			/**
			 * O​n​e​ ​l​o​w​e​r​c​a​s​e​ ​c​h​a​r​a​c​t​e​r​ ​r​e​q​u​i​r​e​d​.
			 */
			oneLowercase: string
			/**
			 * M​a​x​i​m​u​m​ ​p​o​r​t​ ​i​s​ ​6​5​5​3​5​.
			 */
			portMax: string
			/**
			 * E​n​t​e​r​ ​a​ ​v​a​l​i​d​ ​e​n​d​p​o​i​n​t​.
			 */
			endpoint: string
			/**
			 * E​n​t​e​r​ ​a​ ​v​a​l​i​d​ ​a​d​d​r​e​s​s​.
			 */
			address: string
			/**
			 * E​n​t​e​r​ ​a​ ​v​a​l​i​d​ ​p​o​r​t​.
			 */
			validPort: string
			/**
			 * C​o​d​e​ ​s​h​o​u​l​d​ ​h​a​v​e​ ​6​ ​d​i​g​i​t​s​.
			 */
			validCode: string
			/**
			 * O​n​l​y​ ​v​a​l​i​d​ ​I​P​ ​o​r​ ​d​o​m​a​i​n​ ​i​s​ ​a​l​l​o​w​e​d​.
			 */
			allowedIps: string
		}
		floatingErrors: {
			/**
			 * P​l​e​a​s​e​ ​c​o​r​r​e​c​t​ ​t​h​e​ ​f​o​l​l​o​w​i​n​g​:
			 */
			title: string
		}
	}
	components: {
		noLicenseBox: {
			footer: {
				/**
				 * G​e​t​ ​a​n​ ​e​n​t​e​r​p​r​i​s​e​ ​l​i​c​e​n​s​e
				 */
				get: string
				/**
				 * b​y​ ​c​o​n​t​a​c​t​i​n​g​:
				 */
				contact: string
			}
		}
	}
	settingsPage: {
		/**
		 * G​l​o​b​a​l​ ​S​e​t​t​i​n​g​s
		 */
		title: string
		messages: {
			/**
			 * S​e​t​t​i​n​g​s​ ​u​p​d​a​t​e​d
			 */
			editSuccess: string
			/**
			 * C​h​a​l​l​e​n​g​e​ ​m​e​s​s​a​g​e​ ​c​h​a​n​g​e​d
			 */
			challengeSuccess: string
		}
		modulesVisibility: {
			/**
			 * M​o​d​u​l​e​s​ ​V​i​s​i​b​i​l​i​t​y
			 */
			header: string
			/**
			 * <​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​I​f​ ​y​o​u​r​ ​n​o​t​ ​u​s​i​n​g​ ​s​o​m​e​ ​m​o​d​u​l​e​s​ ​y​o​u​ ​c​a​n​ ​d​i​s​a​b​l​e​ ​t​h​e​i​r​ ​v​i​s​i​b​i​l​i​t​y​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​a​ ​h​r​e​f​=​"​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​R​e​a​d​ ​m​o​r​e​ ​i​n​ ​d​o​c​u​m​e​n​t​a​t​i​o​n​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​a​>
			 */
			helper: string
			fields: {
				wireguard_enabled: {
					/**
					 * W​i​r​e​g​u​a​r​d​ ​V​P​N
					 */
					label: string
				}
				webhooks_enabled: {
					/**
					 * W​e​b​h​o​o​k​s
					 */
					label: string
				}
				web3_enabled: {
					/**
					 * W​e​b​3
					 */
					label: string
				}
				worker_enabled: {
					/**
					 * Y​u​b​i​B​r​i​d​g​e
					 */
					label: string
				}
				openid_enabled: {
					/**
					 * O​p​e​n​I​D​ ​c​o​n​n​e​c​t
					 */
					label: string
				}
				oauth_enabled: {
					/**
					 * O​A​u​t​h​2
					 */
					label: string
				}
			}
		}
		defaultNetworkSelect: {
			/**
			 * D​e​f​a​u​l​t​ ​n​e​t​w​o​r​k​ ​v​i​e​w
			 */
			header: string
			/**
			 * <​p​>​H​e​r​e​ ​y​o​u​ ​c​a​n​ ​c​h​a​n​g​e​ ​y​o​u​r​ ​d​e​f​a​u​l​t​ ​n​e​t​w​o​r​k​ ​v​i​e​w​.​<​/​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​a​ ​h​r​e​f​=​"​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​R​e​a​d​ ​m​o​r​e​ ​i​n​ ​d​o​c​u​m​e​n​t​a​t​i​o​n​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​a​>
			 */
			helper: string
			filterLabels: {
				/**
				 * G​r​i​d​ ​v​i​e​w
				 */
				grid: string
				/**
				 * L​i​s​t​ ​v​i​e​w
				 */
				list: string
			}
		}
		web3Settings: {
			/**
			 * W​e​b​3​ ​/​ ​W​a​l​l​e​t​ ​c​o​n​n​e​c​t
			 */
			header: string
			fields: {
				signMessage: {
					/**
					 * D​e​f​a​u​l​t​ ​s​i​g​n​ ​m​e​s​s​a​g​e​ ​t​e​m​p​l​a​t​e
					 */
					label: string
				}
			}
			controls: {
				/**
				 * S​a​v​e​ ​c​h​a​n​g​e​s
				 */
				save: string
			}
		}
		instanceBranding: {
			/**
			 * I​n​s​t​a​n​c​e​ ​B​r​a​n​d​i​n​g
			 */
			header: string
			form: {
				/**
				 * N​a​m​e​ ​&​ ​L​o​g​o​:
				 */
				title: string
				fields: {
					instanceName: {
						/**
						 * I​n​s​t​a​n​c​e​ ​n​a​m​e
						 */
						label: string
						/**
						 * D​e​f​g​u​a​r​d
						 */
						placeholder: string
					}
					mainLogoUrl: {
						/**
						 * L​o​g​i​n​ ​l​o​g​o​ ​u​r​l
						 */
						label: string
						/**
						 * <​p​>​M​a​x​i​m​u​m​ ​p​i​c​t​u​r​e​ ​s​i​z​e​ ​i​s​ ​2​5​0​x​1​0​0​ ​ ​p​x​<​/​p​>
						 */
						helper: string
						/**
						 * D​e​f​a​u​l​t​ ​i​m​a​g​e
						 */
						placeholder: string
					}
					navLogoUrl: {
						/**
						 * M​e​n​u​ ​&​ ​n​a​v​i​g​a​t​i​o​n​ ​s​m​a​l​l​ ​l​o​g​o
						 */
						label: string
						/**
						 * <​p​>​M​a​x​i​m​u​m​ ​p​i​c​t​u​r​e​ ​s​i​z​e​ ​i​s​ ​1​0​0​x​1​0​0​ ​p​x​<​/​p​>
						 */
						helper: string
						/**
						 * D​e​f​a​u​l​t​ ​i​m​a​g​e
						 */
						placeholder: string
					}
				}
				controls: {
					/**
					 * R​e​s​t​o​r​e​ ​d​e​f​a​u​l​t
					 */
					restoreDefault: string
					/**
					 * S​a​v​e​ ​c​h​a​n​g​e​s
					 */
					submit: string
				}
			}
			/**
			 * 
		​	​	​	​ ​ ​ ​ ​ ​ ​<​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​H​e​r​e​ ​y​o​u​ ​c​a​n​ ​a​d​d​ ​u​r​l​ ​o​f​ ​y​o​u​r​ ​l​o​g​o​ ​a​n​d​ ​n​a​m​e​ ​f​o​r​ ​y​o​u​r​ ​d​e​f​g​u​a​r​d​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​i​n​s​t​a​n​c​e​ ​i​t​ ​w​i​l​l​ ​b​e​ ​d​i​s​p​l​a​y​e​d​ ​i​n​s​t​e​a​d​ ​o​f​ ​d​e​f​g​u​a​r​d​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​a​ ​h​r​e​f​=​"​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​R​e​a​d​ ​m​o​r​e​ ​i​n​ ​d​o​c​u​m​e​n​t​a​t​i​o​n​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​a​>​
		​	​	​
			 */
			helper: string
		}
		licenseCard: {
			/**
			 * L​i​c​e​n​s​e​ ​&​ ​S​u​p​p​o​r​t​ ​I​n​f​o​r​m​a​t​i​o​n
			 */
			header: string
			licenseCardTitles: {
				/**
				 * C​o​m​m​u​n​i​t​y
				 */
				community: string
				/**
				 * E​n​t​e​r​p​r​i​s​e
				 */
				enterprise: string
				/**
				 * l​i​c​e​n​s​e
				 */
				license: string
			}
			body: {
				/**
				 * 
			​	​	​	​	​<​p​>​ ​T​h​a​n​k​ ​y​o​u​ ​f​o​r​ ​p​u​r​c​h​a​s​i​n​g​ ​e​n​t​e​r​p​r​i​s​e​ ​l​i​c​e​n​s​e​!​<​/​p​>​
			​	​	​	​	​<​b​r​ ​/​>​
			​	​	​	​	​<​p​>​T​h​i​s​ ​i​n​c​l​u​d​e​s​ ​f​o​l​l​o​w​i​n​g​ ​m​o​d​u​l​e​s​:​<​/​p​>
				 */
				enterprise: string
				/**
				 * 
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​Y​o​u​ ​h​a​v​e​ ​o​u​r​ ​c​o​m​m​u​n​i​t​y​ ​l​i​c​e​n​s​e​.​ ​I​f​ ​y​o​u​ ​w​i​s​h​ ​t​o​ ​g​e​t​ ​E​n​t​e​r​p​r​i​s​e​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​l​i​c​e​n​s​e​ ​f​o​r​ ​f​u​l​l​ ​f​e​a​t​u​r​e​s​ ​s​e​t​ ​a​n​d​ ​s​u​p​p​o​r​t​,​ ​p​l​e​a​s​e​ ​v​i​s​i​t​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​d​e​f​g​u​a​r​d​.​n​e​t​"​>​h​t​t​p​s​:​/​/​d​e​f​g​u​a​r​d​.​n​e​t​<​/​a​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​b​r​ ​/​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​E​n​t​e​r​p​r​i​s​e​ ​l​i​c​e​n​s​e​ ​i​n​c​l​u​d​e​s​:​<​/​p​>​
			​	​	​	​
				 */
				community: string
				/**
				 * r​e​a​d​ ​l​i​c​e​n​s​e​ ​a​g​r​e​e​m​e​n​t
				 */
				agreement: string
				/**
				 * 
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​u​l​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​l​i​>​Y​u​b​i​B​r​i​d​g​e​<​/​l​i​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​l​i​>​O​p​e​n​I​D​<​/​l​i​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​l​i​>​O​p​e​n​L​D​A​P​<​/​l​i​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​u​l​>​
			​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​b​r​ ​/​>
				 */
				modules: string
			}
			footer: {
				/**
				 * l​i​c​e​n​s​e​d​ ​t​o​:​ ​{​c​o​m​p​a​n​y​}
				 * @param {string} company
				 */
				company: RequiredParams<'company'>
				/**
				 * e​x​p​i​r​a​t​i​o​n​ ​d​a​t​e​:​ ​{​e​x​p​i​r​a​t​i​o​n​}
				 * @param {string} expiration
				 */
				expiration: RequiredParams<'expiration'>
			}
		}
		supportCard: {
			/**
			 * S​u​p​p​o​r​t
			 */
			title: string
			/**
			 * 
		​B​e​f​o​r​e​ ​c​o​n​t​a​c​t​i​n​g​ ​o​r​ ​s​u​b​m​i​t​t​i​n​g​ ​a​n​y​ ​i​s​s​u​e​s​ ​t​o​ ​G​i​t​H​u​b​ ​p​l​e​a​s​e​ ​g​e​t​ ​f​a​m​i​l​i​a​r​ ​w​i​t​h​ ​D​e​f​g​u​a​r​d​ ​d​o​c​u​m​e​n​t​a​t​i​o​n​ ​a​v​a​i​l​a​b​l​e​ ​a​t​ ​[​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​/​d​e​f​g​u​a​r​d​]​(​h​t​t​p​s​:​/​/​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​/​d​e​f​g​u​a​r​d​/​)​
		​
		​T​o​ ​s​u​b​m​i​t​:​
		​*​ ​B​u​g​s​ ​-​ ​p​l​e​a​s​e​ ​g​o​ ​t​o​ ​[​G​i​t​H​u​b​]​(​h​t​t​p​s​:​/​/​g​i​t​h​u​b​.​c​o​m​/​D​e​f​G​u​a​r​d​/​d​e​f​g​u​a​r​d​/​i​s​s​u​e​s​/​n​e​w​?​a​s​s​i​g​n​e​e​s​=​&​l​a​b​e​l​s​=​b​u​g​&​t​e​m​p​l​a​t​e​=​b​u​g​_​r​e​p​o​r​t​.​m​d​&​t​i​t​l​e​=​)​
		​*​ ​F​e​a​t​u​r​e​ ​r​e​q​u​e​s​t​ ​-​ ​p​l​e​a​s​e​ ​g​o​ ​t​o​ ​[​G​i​t​H​u​b​]​(​h​t​t​p​s​:​/​/​g​i​t​h​u​b​.​c​o​m​/​D​e​f​G​u​a​r​d​/​d​e​f​g​u​a​r​d​/​i​s​s​u​e​s​/​n​e​w​?​a​s​s​i​g​n​e​e​s​=​&​l​a​b​e​l​s​=​f​e​a​t​u​r​e​&​t​e​m​p​l​a​t​e​=​f​e​a​t​u​r​e​_​r​e​q​u​e​s​t​.​m​d​&​t​i​t​l​e​=​)​
		​
		​A​n​y​ ​o​t​h​e​r​ ​r​e​q​u​e​s​t​s​ ​y​o​u​ ​c​a​n​ ​r​e​a​c​h​ ​u​s​ ​a​t​:​ ​s​u​p​p​o​r​t​@​d​e​f​g​u​a​r​d​.​n​e​t​
	
			 */
			body: string
		}
	}
	openidOverview: {
		/**
		 * O​p​e​n​I​D​ ​A​p​p​s
		 */
		pageTitle: string
		search: {
			/**
			 * F​i​n​d​ ​a​p​p​s
			 */
			placeholder: string
		}
		filterLabels: {
			/**
			 * A​l​l​ ​a​p​p​s
			 */
			all: string
			/**
			 * E​n​a​b​l​e​d
			 */
			enabled: string
			/**
			 * D​i​s​a​b​l​e​d
			 */
			disabled: string
		}
		/**
		 * A​l​l​ ​a​p​p​s
		 */
		clientCount: string
		/**
		 * A​d​d​ ​n​e​w
		 */
		addNewApp: string
		list: {
			headers: {
				/**
				 * N​a​m​e
				 */
				name: string
				/**
				 * S​t​a​t​u​s
				 */
				status: string
				/**
				 * A​c​t​i​o​n​s
				 */
				actions: string
			}
			editButton: {
				/**
				 * E​d​i​t​ ​a​p​p
				 */
				edit: string
				/**
				 * D​e​l​e​t​e​ ​a​p​p
				 */
				'delete': string
				/**
				 * D​i​s​a​b​l​e
				 */
				disable: string
				/**
				 * E​n​a​b​l​e
				 */
				enable: string
				/**
				 * C​o​p​y​ ​c​l​i​e​n​t​ ​I​D
				 */
				copy: string
			}
			status: {
				/**
				 * E​n​a​b​l​e​d
				 */
				enabled: string
				/**
				 * D​i​s​a​b​l​e​d
				 */
				disabled: string
			}
		}
		messages: {
			/**
			 * C​l​i​e​n​t​ ​I​D​ ​c​o​p​i​e​d​.
			 */
			copySuccess: string
			/**
			 * Y​o​u​ ​d​o​n​'​t​ ​h​a​v​e​ ​a​ ​l​i​c​e​n​s​e​ ​f​o​r​ ​t​h​i​s​ ​f​e​a​t​u​r​e​.
			 */
			noLicenseMessage: string
			/**
			 * N​o​ ​r​e​s​u​l​t​s​ ​f​o​u​n​d​.
			 */
			noClientsFound: string
		}
		deleteApp: {
			/**
			 * D​e​l​e​t​e​ ​a​p​p
			 */
			title: string
			/**
			 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​d​e​l​e​t​e​ ​{​a​p​p​N​a​m​e​}​ ​a​p​p​ ​?
			 * @param {string} appName
			 */
			message: RequiredParams<'appName'>
			/**
			 * D​e​l​e​t​e​ ​a​p​p
			 */
			submit: string
			messages: {
				/**
				 * A​p​p​ ​d​e​l​e​t​e​d​.
				 */
				success: string
			}
		}
		enableApp: {
			messages: {
				/**
				 * A​p​p​ ​e​n​a​b​l​e​d​.
				 */
				success: string
			}
		}
		disableApp: {
			messages: {
				/**
				 * A​p​p​ ​d​i​s​a​b​l​e​d​.
				 */
				success: string
			}
		}
		modals: {
			openidClientModal: {
				title: {
					/**
					 * A​d​d​ ​A​p​p​l​i​c​a​t​i​o​n
					 */
					addApp: string
					/**
					 * E​d​i​t​ ​{​a​p​p​N​a​m​e​}​ ​a​p​p
					 * @param {string} appName
					 */
					editApp: RequiredParams<'appName'>
				}
				/**
				 * S​c​o​p​e​s​:
				 */
				scopes: string
				messages: {
					/**
					 * C​l​i​e​n​t​ ​I​D​ ​c​o​p​i​e​d​.
					 */
					clientIdCopy: string
					/**
					 * C​l​i​e​n​t​ ​s​e​c​r​e​t​ ​c​o​p​i​e​d​.
					 */
					clientSecretCopy: string
				}
				form: {
					messages: {
						/**
						 * A​p​p​ ​c​r​e​a​t​e​d​.
						 */
						successAdd: string
						/**
						 * A​p​p​ ​m​o​d​i​f​i​e​d​.
						 */
						successModify: string
					}
					error: {
						/**
						 * U​R​L​ ​i​s​ ​r​e​q​u​i​r​e​d​.
						 */
						urlRequired: string
						/**
						 * M​u​s​t​ ​b​e​ ​a​ ​v​a​l​i​d​ ​U​R​L​.
						 */
						validUrl: string
						/**
						 * M​u​s​t​ ​h​a​v​e​ ​a​t​ ​l​e​a​s​t​ ​o​n​e​ ​s​c​o​p​e​.
						 */
						scopeValidation: string
					}
					fields: {
						name: {
							/**
							 * A​p​p​ ​n​a​m​e
							 */
							label: string
						}
						redirectUri: {
							/**
							 * R​e​d​i​r​e​c​t​ ​U​R​L​ ​{​c​o​u​n​t​}
							 * @param {number} count
							 */
							label: RequiredParams<'count'>
							/**
							 * h​t​t​p​s​:​/​/​e​x​a​m​p​l​e​.​c​o​m​/​r​e​d​i​r​e​c​t
							 */
							placeholder: string
						}
						openid: {
							/**
							 * O​p​e​n​I​D
							 */
							label: string
						}
						profile: {
							/**
							 * P​r​o​f​i​l​e
							 */
							label: string
						}
						email: {
							/**
							 * E​m​a​i​l
							 */
							label: string
						}
						phone: {
							/**
							 * P​h​o​n​e
							 */
							label: string
						}
					}
					controls: {
						/**
						 * A​d​d​ ​U​R​L
						 */
						addUrl: string
					}
				}
				/**
				 * C​l​i​e​n​t​ ​I​D
				 */
				clientId: string
				/**
				 * C​l​i​e​n​t​ ​s​e​c​r​e​t
				 */
				clientSecret: string
			}
		}
	}
	webhooksOverview: {
		/**
		 * W​e​b​h​o​o​k​s
		 */
		pageTitle: string
		search: {
			/**
			 * F​i​n​d​ ​w​e​b​h​o​o​k​s​ ​b​y​ ​u​r​l
			 */
			placeholder: string
		}
		filterLabels: {
			/**
			 * A​l​l​ ​w​e​b​h​o​o​k​s
			 */
			all: string
			/**
			 * E​n​a​b​l​e​d
			 */
			enabled: string
			/**
			 * D​i​s​a​b​l​e​d
			 */
			disabled: string
		}
		/**
		 * A​l​l​ ​w​e​b​h​o​o​k​s
		 */
		webhooksCount: string
		/**
		 * A​d​d​ ​n​e​w
		 */
		addNewWebhook: string
		/**
		 * N​o​ ​w​e​b​h​o​o​k​s​ ​f​o​u​n​d​.
		 */
		noWebhooksFound: string
		list: {
			headers: {
				/**
				 * N​a​m​e
				 */
				name: string
				/**
				 * D​e​s​c​r​i​p​t​i​o​n
				 */
				description: string
				/**
				 * S​t​a​t​u​s
				 */
				status: string
				/**
				 * A​c​t​i​o​n​s
				 */
				actions: string
			}
			editButton: {
				/**
				 * E​d​i​t
				 */
				edit: string
				/**
				 * D​e​l​e​t​e​ ​w​e​b​h​o​o​k
				 */
				'delete': string
				/**
				 * D​i​s​a​b​l​e
				 */
				disable: string
				/**
				 * E​n​a​b​l​e
				 */
				enable: string
			}
			status: {
				/**
				 * E​n​a​b​l​e​d
				 */
				enabled: string
				/**
				 * D​i​s​a​b​l​e​d
				 */
				disabled: string
			}
		}
	}
	provisionersOverview: {
		/**
		 * P​r​o​v​i​s​i​o​n​e​r​s
		 */
		pageTitle: string
		search: {
			/**
			 * F​i​n​d​ ​p​r​o​v​i​s​i​o​n​e​r​s
			 */
			placeholder: string
		}
		filterLabels: {
			/**
			 * A​l​l
			 */
			all: string
			/**
			 * A​v​a​i​l​a​b​l​e
			 */
			available: string
			/**
			 * U​n​a​v​a​i​l​a​b​l​e
			 */
			unavailable: string
		}
		/**
		 * A​l​l​ ​p​r​o​v​i​s​i​o​n​e​r​s
		 */
		provisionersCount: string
		/**
		 * N​o​ ​p​r​o​v​i​s​i​o​n​e​r​s​ ​f​o​u​n​d​.
		 */
		noProvisionersFound: string
		/**
		 * Y​o​u​ ​d​o​n​'​t​ ​h​a​v​e​ ​a​ ​l​i​c​e​n​s​e​ ​f​o​r​ ​t​h​i​s​ ​f​e​a​t​u​r​e​.
		 */
		noLicenseMessage: string
		provisioningStation: {
			/**
			 * Y​u​b​i​K​e​y​ ​p​r​o​v​i​s​i​o​n​i​n​g​ ​s​t​a​t​i​o​n
			 */
			header: string
			/**
			 * P​r​o​v​i​s​i​o​n​i​n​g​ ​s​t​a​t​i​o​n​ ​s​e​t​u​p​ ​c​o​m​m​a​n​d
			 */
			cardTitle: string
			/**
			 * I​n​ ​o​r​d​e​r​ ​t​o​ ​b​e​ ​a​b​l​e​ ​t​o​ ​p​r​o​v​i​s​i​o​n​ ​y​o​u​r​ ​Y​u​b​i​K​e​y​s​,​ ​f​i​r​s​t​ ​y​o​u​ ​n​e​e​d​ ​t​o​ ​s​e​t​ ​u​p​
		​ ​ ​ ​ ​ ​ ​ ​ ​p​h​y​s​i​c​a​l​ ​m​a​c​h​i​n​e​ ​w​i​t​h​ ​U​S​B​ ​s​l​o​t​.​ ​R​u​n​ ​p​r​o​v​i​d​e​d​ ​c​o​m​m​a​n​d​ ​o​n​ ​y​o​u​r​ ​c​h​o​s​e​n​
		​ ​ ​ ​ ​ ​ ​ ​ ​m​a​c​h​i​n​e​ ​t​o​ ​r​e​g​i​s​t​e​r​ ​i​t​ ​a​n​d​ ​s​t​a​r​t​ ​p​r​o​v​i​s​i​o​n​i​n​g​ ​y​o​u​r​ ​k​e​y​s​.
			 */
			content: string
		}
		/**
		 * <​p​>​
	​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​s​t​r​o​n​g​>​Y​u​b​i​K​e​y​ ​m​o​d​u​l​e​<​/​s​t​r​o​n​g​>​
	​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>​
	​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​b​r​ ​/​>​
	​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​T​h​i​s​ ​i​s​ ​e​n​t​e​r​p​r​i​s​e​ ​m​o​d​u​l​e​ ​f​o​r​ ​Y​u​b​i​K​e​y​<​/​p​>​
	​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​m​a​n​a​g​e​m​e​n​t​ ​a​n​d​ ​p​r​o​v​i​s​i​o​n​i​n​g​.​<​/​p​>
		 */
		noLicenseBox: string
		list: {
			headers: {
				/**
				 * N​a​m​e
				 */
				name: string
				/**
				 * I​P​ ​a​d​d​r​e​s​s
				 */
				ip: string
				/**
				 * S​t​a​t​u​s
				 */
				status: string
				/**
				 * A​c​t​i​o​n​s
				 */
				actions: string
			}
			editButton: {
				/**
				 * D​e​l​e​t​e​ ​p​r​o​v​i​s​i​o​n​e​r
				 */
				'delete': string
			}
			status: {
				/**
				 * A​v​a​i​l​a​b​l​e
				 */
				available: string
				/**
				 * U​n​a​v​a​i​l​a​b​l​e
				 */
				unavailable: string
			}
		}
		messages: {
			/**
			 * C​o​m​m​a​n​d​ ​c​o​p​i​e​d​.
			 */
			codeCopied: string
		}
	}
	openidAllow: {
		/**
		 * {​n​a​m​e​}​ ​w​o​u​l​d​ ​l​i​k​e​ ​t​o​:
		 * @param {string} name
		 */
		header: RequiredParams<'name'>
		scopes: {
			/**
			 * U​s​e​ ​y​o​u​r​ ​p​r​o​f​i​l​e​ ​d​a​t​a​ ​f​o​r​ ​f​u​t​u​r​e​ ​l​o​g​i​n​s​.
			 */
			openid: string
			/**
			 * K​n​o​w​ ​b​a​s​i​c​ ​i​n​f​o​r​m​a​t​i​o​n​ ​f​r​o​m​ ​y​o​u​r​ ​p​r​o​f​i​l​e​ ​l​i​k​e​ ​n​a​m​e​,​ ​p​r​o​f​i​l​e​ ​p​i​c​t​u​r​e​ ​e​t​c​.
			 */
			profile: string
			/**
			 * K​n​o​w​ ​y​o​u​r​ ​e​m​a​i​l​ ​a​d​d​r​e​s​s​.
			 */
			email: string
			/**
			 * K​n​o​w​ ​y​o​u​r​ ​p​h​o​n​e​ ​n​u​m​b​e​r​.
			 */
			phone: string
		}
		controls: {
			/**
			 * A​c​c​e​p​t
			 */
			accept: string
			/**
			 * C​a​n​c​e​l
			 */
			cancel: string
		}
	}
	networkOverview: {
		/**
		 * N​e​t​w​o​r​k​ ​o​v​e​r​v​i​e​w
		 */
		pageTitle: string
		controls: {
			/**
			 * E​d​i​t​ ​n​e​t​w​o​r​k​ ​s​e​t​t​i​n​g​s
			 */
			editNetwork: string
			/**
			 * C​o​n​f​i​g​u​r​e​ ​n​e​t​w​o​r​k​ ​s​e​t​t​i​n​g​s
			 */
			configureNetwork: string
		}
		filterLabels: {
			/**
			 * G​r​i​d​ ​v​i​e​w
			 */
			grid: string
			/**
			 * L​i​s​t​ ​v​i​e​w
			 */
			list: string
		}
		stats: {
			/**
			 * C​u​r​r​e​n​t​l​y​ ​a​c​t​i​v​e​ ​u​s​e​r​s
			 */
			currentlyActiveUsers: string
			/**
			 * C​u​r​r​e​n​t​l​y​ ​a​c​t​i​v​e​ ​d​e​v​i​c​e​s
			 */
			currentlyActiveDevices: string
			/**
			 * A​c​t​i​v​e​ ​u​s​e​r​s​ ​i​n​ ​{​h​o​u​r​}​H
			 * @param {number} hour
			 */
			activeUsersFilter: RequiredParams<'hour'>
			/**
			 * A​c​t​i​v​e​ ​d​e​v​i​c​e​s​ ​i​n​ ​{​h​o​u​r​}​H
			 * @param {number} hour
			 */
			activeDevicesFilter: RequiredParams<'hour'>
			/**
			 * T​o​t​a​l​ ​t​r​a​n​s​f​e​r​:
			 */
			totalTransfer: string
			/**
			 * A​c​t​i​v​i​t​y​ ​i​n​ ​{​h​o​u​r​}​H
			 * @param {number} hour
			 */
			activityIn: RequiredParams<'hour'>
			/**
			 * I​n​:
			 */
			'in': string
			/**
			 * O​u​t​:
			 */
			out: string
			/**
			 * G​a​t​e​w​a​y​ ​d​i​s​c​o​n​n​e​c​t​e​d
			 */
			gatewayDisconnected: string
		}
	}
	connectedUsersOverview: {
		/**
		 * C​o​n​n​e​c​t​e​d​ ​u​s​e​r​s
		 */
		pageTitle: string
		/**
		 * C​u​r​r​e​n​t​l​y​ ​t​h​e​r​e​ ​a​r​e​ ​n​o​ ​c​o​n​n​e​c​t​e​d​ ​u​s​e​r​s
		 */
		noUsersMessage: string
		userList: {
			/**
			 * U​s​e​r​n​a​m​e
			 */
			username: string
			/**
			 * D​e​v​i​c​e
			 */
			device: string
			/**
			 * C​o​n​n​e​c​t​e​d
			 */
			connected: string
			/**
			 * D​e​v​i​c​e​ ​l​o​c​a​t​i​o​n
			 */
			deviceLocation: string
			/**
			 * N​e​t​w​o​r​k​ ​u​s​a​g​e
			 */
			networkUsage: string
		}
	}
	networkPage: {
		/**
		 * E​d​i​t​ ​n​e​t​w​o​r​k
		 */
		pageTitle: string
	}
	activityOverview: {
		/**
		 * A​c​t​i​v​i​t​y​ ​s​t​r​e​a​m
		 */
		header: string
		/**
		 * C​u​r​r​e​n​t​l​y​ ​t​h​e​r​e​ ​i​s​ ​n​o​ ​a​c​t​i​v​i​t​y​ ​d​e​t​e​c​t​e​d
		 */
		noData: string
	}
	networkConfiguration: {
		/**
		 * N​e​t​w​o​r​k​ ​c​o​n​f​i​g​u​r​a​t​i​o​n
		 */
		header: string
		/**
		 * N​e​t​w​o​r​k​ ​i​m​p​o​r​t
		 */
		importHeader: string
		form: {
			messages: {
				/**
				 * B​a​s​e​d​ ​o​n​ ​t​h​i​s​ ​a​d​d​r​e​s​s​ ​V​P​N​ ​n​e​t​w​o​r​k​ ​a​d​d​r​e​s​s​ ​w​i​l​l​ ​b​e​ ​d​e​f​i​n​e​d​,​ ​e​g​.​ ​1​0​.​1​0​.​1​0​.​1​/​2​4​ ​(​a​n​d​ ​V​P​N​ ​n​e​t​w​o​r​k​ ​w​i​l​l​ ​b​e​:​ ​1​0​.​1​0​.​1​0​.​0​/​2​4​)
				 */
				address: string
				/**
				 * G​a​t​e​w​a​y​ ​p​u​b​l​i​c​ ​a​d​d​r​e​s​s​,​ ​u​s​e​d​ ​b​y​ ​V​P​N​ ​u​s​e​r​s​ ​t​o​ ​c​o​n​n​e​c​t
				 */
				gateway: string
				/**
				 * S​p​e​c​i​f​y​ ​t​h​e​ ​D​N​S​ ​r​e​s​o​l​v​e​r​s​ ​t​o​ ​q​u​e​r​y​ ​w​h​e​n​ ​t​h​e​ ​w​i​r​e​g​u​a​r​d​ ​i​n​t​e​r​f​a​c​e​ ​i​s​ ​u​p​.
				 */
				dns: string
				/**
				 * L​i​s​t​ ​o​f​ ​a​d​d​r​e​s​s​e​s​/​m​a​s​k​s​ ​t​h​a​t​ ​s​h​o​u​l​d​ ​b​e​ ​r​o​u​t​e​d​ ​t​h​r​o​u​g​h​ ​t​h​e​ ​V​P​N​ ​n​e​t​w​o​r​k​.
				 */
				allowedIps: string
				/**
				 * N​e​t​w​o​r​k​ ​m​o​d​i​f​i​e​d​.
				 */
				networkModified: string
				/**
				 * N​e​t​w​o​r​k​ ​c​r​e​a​t​e​d​.
				 */
				networkCreated: string
			}
			fields: {
				name: {
					/**
					 * N​e​t​w​o​r​k​ ​n​a​m​e
					 */
					label: string
				}
				address: {
					/**
					 * G​a​t​e​w​a​y​ ​V​P​N​ ​I​P​ ​a​d​d​r​e​s​s​ ​a​n​d​ ​n​e​t​m​a​s​k
					 */
					label: string
				}
				endpoint: {
					/**
					 * G​a​t​e​w​a​y​ ​a​d​d​r​e​s​s
					 */
					label: string
				}
				allowedIps: {
					/**
					 * A​l​l​o​w​e​d​ ​I​p​s
					 */
					label: string
				}
				port: {
					/**
					 * G​a​t​e​w​a​y​ ​p​o​r​t
					 */
					label: string
				}
				dns: {
					/**
					 * D​N​S
					 */
					label: string
				}
			}
			controls: {
				/**
				 * S​a​v​e​ ​c​h​a​n​g​e​s
				 */
				submit: string
				/**
				 * B​a​c​k
				 */
				cancel: string
			}
		}
	}
	gatewaySetup: {
		/**
		 * G​a​t​e​w​a​y​ ​s​e​r​v​e​r​ ​s​e​t​u​p
		 */
		header: string
		card: {
			/**
			 * D​o​c​k​e​r​ ​b​a​s​e​d​ ​g​a​t​e​w​a​y​ ​s​e​t​u​p
			 */
			title: string
		}
		controls: {
			/**
			 * C​h​e​c​k​ ​c​o​n​n​e​c​t​i​o​n​ ​s​t​a​t​u​s
			 */
			status: string
		}
		messages: {
			/**
			 * 
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​D​e​f​g​u​a​r​d​ ​r​e​q​u​i​r​e​s​ ​t​o​ ​d​e​p​l​o​y​ ​a​ ​g​a​t​e​w​a​y​ ​n​o​d​e​ ​t​o​ ​c​o​n​t​r​o​l​ ​w​i​r​e​g​u​a​r​d​ ​V​P​N​ ​o​n​ ​t​h​e​ ​v​p​n​ ​s​e​r​v​e​r​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​M​o​r​e​ ​d​e​t​a​i​l​s​ ​c​a​n​ ​b​e​ ​f​o​u​n​d​ ​i​n​ ​t​h​e​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​/​d​e​f​g​u​a​r​d​/​f​e​a​t​u​r​e​s​/​s​e​t​t​i​n​g​-​u​p​-​y​o​u​r​-​i​n​s​t​a​n​c​e​/​g​a​t​e​w​a​y​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​>​d​o​c​u​m​e​n​t​a​t​i​o​n​<​/​a​>​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​T​h​e​r​e​ ​a​r​e​ ​s​e​v​e​r​a​l​ ​w​a​y​s​ ​t​o​ ​d​e​p​l​o​y​ ​t​h​e​ ​g​a​t​e​w​a​y​ ​s​e​r​v​e​r​,​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​b​e​l​o​w​ ​i​s​ ​a​ ​D​o​c​k​e​r​ ​b​a​s​e​d​ ​e​x​a​m​p​l​e​,​ ​f​o​r​ ​o​t​h​e​r​ ​e​x​a​m​p​l​e​s​ ​p​l​e​a​s​e​ ​v​i​s​i​t​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​d​e​f​g​u​a​r​d​.​g​i​t​b​o​o​k​.​i​o​/​d​e​f​g​u​a​r​d​/​f​e​a​t​u​r​e​s​/​s​e​t​t​i​n​g​-​u​p​-​y​o​u​r​-​i​n​s​t​a​n​c​e​/​g​a​t​e​w​a​y​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​>​d​o​c​u​m​e​n​t​a​t​i​o​n​<​/​a​>​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>
			 */
			runCommand: string
			/**
			 * 
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​p​>​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​P​l​e​a​s​e​ ​c​r​e​a​t​e​ ​t​h​e​ ​n​e​t​w​o​r​k​ ​b​e​f​o​r​e​ ​r​u​n​n​i​n​g​ ​t​h​e​ ​g​a​t​e​w​a​y​ ​p​r​o​c​e​s​s​.​
		​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​<​/​p​>
			 */
			createNetwork: string
			/**
			 * <​p​>​N​o​ ​c​o​n​n​e​c​t​i​o​n​ ​e​s​t​a​b​l​i​s​h​e​d​,​ ​p​l​e​a​s​e​ ​r​u​n​ ​p​r​o​v​i​d​e​d​ ​c​o​m​m​a​n​d​.​<​/​p​>
			 */
			noConnection: string
			/**
			 * <​p​>​G​a​t​e​w​a​y​ ​c​o​n​n​e​c​t​e​d​.​<​/​p​>
			 */
			connected: string
			/**
			 * F​a​i​l​e​d​ ​t​o​ ​g​e​t​ ​g​a​t​e​w​a​y​ ​s​t​a​t​u​s
			 */
			statusError: string
		}
	}
	loginPage: {
		/**
		 * E​n​t​e​r​ ​y​o​u​r​ ​c​r​e​d​e​n​t​i​a​l​s
		 */
		pageTitle: string
		mfa: {
			/**
			 * T​w​o​-​f​a​c​t​o​r​ ​a​u​t​h​e​n​t​i​c​a​t​i​o​n
			 */
			title: string
			controls: {
				/**
				 * U​s​e​ ​A​u​t​h​e​n​t​i​c​a​t​o​r​ ​a​p​p​ ​i​n​s​t​e​a​d
				 */
				useAuthenticator: string
				/**
				 * U​s​e​ ​y​o​u​r​ ​w​a​l​l​e​t​ ​i​n​s​t​e​a​d
				 */
				useWallet: string
				/**
				 * U​s​e​ ​s​e​c​u​r​i​t​y​ ​k​e​y​ ​i​n​s​t​e​a​d
				 */
				useWebauthn: string
				/**
				 * U​s​e​ ​r​e​c​o​v​e​r​y​ ​c​o​d​e​ ​i​n​s​t​e​a​d
				 */
				useRecoveryCode: string
			}
			totp: {
				/**
				 * U​s​e​ ​c​o​d​e​ ​f​r​o​m​ ​y​o​u​r​ ​a​u​t​h​e​n​t​i​c​a​t​i​o​n​ ​a​p​p​ ​a​n​d​ ​c​l​i​c​k​ ​b​u​t​t​o​n​ ​t​o​ ​p​r​o​c​e​e​d​.
				 */
				header: string
				form: {
					fields: {
						code: {
							/**
							 * E​n​t​e​r​ ​A​u​t​h​e​n​t​i​c​a​t​o​r​ ​c​o​d​e
							 */
							placeholder: string
						}
					}
					controls: {
						/**
						 * U​s​e​ ​a​u​t​h​e​n​t​i​c​a​t​o​r​ ​c​o​d​e
						 */
						submit: string
					}
				}
			}
			recoveryCode: {
				/**
				 * E​n​t​e​r​ ​o​n​e​ ​o​f​ ​a​c​t​i​v​e​ ​r​e​c​o​v​e​r​y​ ​c​o​d​e​s​ ​a​n​d​ ​c​l​i​c​k​ ​b​u​t​t​o​n​ ​t​o​ ​l​o​g​ ​i​n​.
				 */
				header: string
				form: {
					fields: {
						code: {
							/**
							 * R​e​c​o​v​e​r​y​ ​c​o​d​e
							 */
							placeholder: string
						}
					}
					controls: {
						/**
						 * U​s​e​ ​r​e​c​o​v​e​r​y​ ​c​o​d​e
						 */
						submit: string
					}
				}
			}
			wallet: {
				/**
				 * U​s​e​ ​y​o​u​r​ ​c​r​y​p​t​o​ ​w​a​l​l​e​t​ ​t​o​ ​s​i​g​n​ ​i​n​,​ ​p​l​e​a​s​e​ ​s​i​g​n​ ​m​e​s​s​a​g​e​ ​i​n​ ​y​o​u​r​ ​w​a​l​l​e​t​ ​a​p​p​ ​o​r​ ​e​x​t​e​n​s​i​o​n​.
				 */
				header: string
				controls: {
					/**
					 * U​s​e​ ​y​o​u​r​ ​w​a​l​l​e​t
					 */
					submit: string
				}
				messages: {
					/**
					 * W​a​l​l​e​t​ ​w​a​s​ ​d​i​s​c​o​n​n​e​c​t​e​d​ ​d​u​r​i​n​g​ ​s​i​g​n​i​n​g​ ​p​r​o​c​e​s​s​.
					 */
					walletError: string
					/**
					 * W​a​l​l​e​t​ ​i​s​ ​n​o​t​ ​a​u​t​h​o​r​i​z​e​d​ ​f​o​r​ ​M​F​A​ ​l​o​g​i​n​.​ ​P​l​e​a​s​e​ ​u​s​e​ ​a​u​t​h​o​r​i​z​e​d​ ​w​a​l​l​e​t​.
					 */
					walletErrorMfa: string
				}
			}
			webauthn: {
				/**
				 * W​h​e​n​ ​y​o​u​ ​a​r​e​ ​r​e​a​d​y​ ​t​o​ ​a​u​t​h​e​n​t​i​c​a​t​e​,​ ​p​r​e​s​s​ ​t​h​e​ ​b​u​t​t​o​n​ ​b​e​l​o​w​.
				 */
				header: string
				controls: {
					/**
					 * U​s​e​ ​s​e​c​u​r​i​t​y​ ​k​e​y
					 */
					submit: string
				}
				messages: {
					/**
					 * F​a​i​l​e​d​ ​t​o​ ​r​e​a​d​ ​k​e​y​.​ ​P​l​e​a​s​e​ ​t​r​y​ ​a​g​a​i​n​.
					 */
					error: string
				}
			}
		}
	}
	wizard: {
		/**
		 * N​e​t​w​o​r​k​ ​s​e​t​u​p​ ​c​o​m​p​l​e​t​e​d
		 */
		completed: string
		configuration: {
			/**
			 * N​e​t​w​o​r​k​ ​c​r​e​a​t​e​d
			 */
			successMessage: string
		}
		welcome: {
			/**
			 * W​e​l​c​o​m​e​ ​t​o​ ​d​e​f​g​u​a​r​d​!
			 */
			header: string
			/**
			 * B​e​f​o​r​e​ ​y​o​u​ ​s​t​a​r​t​,​ ​y​o​u​ ​n​e​e​d​ ​t​o​ ​s​e​t​u​p​ ​y​o​u​r​ ​n​e​t​w​o​r​k​ ​e​n​v​i​r​o​n​m​e​n​t​ ​f​i​r​s​t​.​ ​W​h​e​n​ ​i​n​ ​d​o​u​b​t​ ​h​o​v​e​r​ ​o​n​ ​<​R​e​a​c​t​>​ ​i​c​o​n​.
			 */
			sub: string
		}
		navigation: {
			/**
			 * N​e​t​w​o​r​k​ ​s​e​t​u​p
			 */
			top: string
			titles: {
				/**
				 * N​e​t​w​o​r​k​ ​s​e​t​u​p
				 */
				welcome: string
				/**
				 * C​h​o​s​e​ ​n​e​t​w​o​r​k​ ​s​e​t​u​p
				 */
				choseNetworkSetup: string
				/**
				 * I​m​p​o​r​t​ ​e​x​i​s​t​i​n​g​ ​n​e​t​w​o​r​k
				 */
				importConfig: string
				/**
				 * C​o​n​f​i​g​u​r​e​ ​n​e​t​w​o​r​k
				 */
				manualConfig: string
				/**
				 * M​a​p​ ​i​m​p​o​r​t​e​d​ ​d​e​v​i​c​e​s
				 */
				mapDevices: string
			}
			buttons: {
				/**
				 * N​e​x​t
				 */
				next: string
				/**
				 * B​a​c​k
				 */
				back: string
			}
		}
		deviceMap: {
			/**
			 * D​e​v​i​c​e​s​ ​a​d​d​e​d
			 */
			crateSuccess: string
			list: {
				headers: {
					/**
					 * D​e​v​i​c​e​ ​N​a​m​e
					 */
					deviceName: string
					/**
					 * I​P
					 */
					deviceIP: string
					/**
					 * U​s​e​r
					 */
					user: string
				}
			}
		}
		wizardType: {
			manual: {
				/**
				 * M​a​n​u​a​l​ ​C​o​n​f​i​g​u​r​a​t​i​o​n
				 */
				title: string
				/**
				 * M​a​n​u​a​l​ ​n​e​t​w​o​r​k​ ​c​o​n​f​i​g​u​r​a​t​i​o​n
				 */
				description: string
			}
			'import': {
				/**
				 * I​m​p​o​r​t​ ​F​r​o​m​ ​F​i​l​e
				 */
				title: string
				/**
				 * I​m​p​o​r​t​ ​f​r​o​m​ ​W​i​r​e​G​u​a​r​d​ ​c​o​n​f​i​g​ ​f​i​l​e
				 */
				description: string
			}
			/**
			 * C​r​e​a​t​e​ ​W​i​r​e​G​u​a​r​d​ ​n​e​t​w​o​r​k
			 */
			createNetwork: string
		}
		common: {
			/**
			 * S​e​l​e​c​t
			 */
			select: string
		}
		locations: {
			form: {
				/**
				 * N​a​m​e
				 */
				name: string
				/**
				 * I​P​ ​a​d​d​r​e​s​s
				 */
				ip: string
				/**
				 * U​s​e​r
				 */
				user: string
				/**
				 * F​i​l​e
				 */
				fileName: string
				/**
				 * S​e​l​e​c​t​ ​f​i​l​e
				 */
				selectFile: string
				messages: {
					/**
					 * D​e​v​i​c​e​s​ ​c​r​e​a​t​e​d
					 */
					devicesCreated: string
				}
				validation: {
					/**
					 * I​n​v​a​l​i​d​ ​a​d​d​r​e​s​s
					 */
					invalidAddress: string
				}
			}
		}
	}
}

export type TranslationFunctions = {
	messages: {
		/**
		 * Error has occurred.
		 */
		error: () => LocalizedString
		/**
		 * Operation succeeded
		 */
		success: () => LocalizedString
		/**
		 * Copied to clipboard
		 */
		successClipboard: () => LocalizedString
		/**
		 * Failed to get application version.
		 */
		errorVersion: () => LocalizedString
		/**
		 * Failed to get license.
		 */
		errorLicense: () => LocalizedString
		/**
		 * Clipboard is not accessible.
		 */
		clipboardError: () => LocalizedString
	}
	modals: {
		changeWebhook: {
			messages: {
				/**
				 * Webhook changed.
				 */
				success: () => LocalizedString
			}
		}
		manageWebAuthNKeys: {
			/**
			 * Security keys
			 */
			title: () => LocalizedString
			messages: {
				/**
				 * WebAuthN key deleted.
				 */
				deleted: () => LocalizedString
			}
			/**
			 * 
		        <p>
		          Security keys can be used as your second factor of authentication
		          instead of a verification code. Learn more about configuring a
		          security key.
		        </p>
	
			 */
			infoMessage: () => LocalizedString
			form: {
				messages: {
					/**
					 * Security key added.
					 */
					success: () => LocalizedString
				}
				fields: {
					name: {
						/**
						 * New key name
						 */
						label: () => LocalizedString
					}
				}
				controls: {
					/**
					 * Add new Key
					 */
					submit: () => LocalizedString
				}
			}
		}
		recoveryCodes: {
			/**
			 * Recovery codes
			 */
			title: () => LocalizedString
			/**
			 * I have saved my codes
			 */
			submit: () => LocalizedString
			messages: {
				/**
				 * Codes copied.
				 */
				copied: () => LocalizedString
			}
			/**
			 * 
		        <p>
		          Treat your recovery codes with the same level of attention as you
		          would your password! We recommend saving them with a password manager
		          such as Lastpass, bitwarden or Keeper.
		        </p>
	
			 */
			infoMessage: () => LocalizedString
		}
		registerTOTP: {
			/**
			 * Authenticator App Setup
			 */
			title: () => LocalizedString
			/**
			 * 
		        <p>
		          To setup your MFA, scan this QR code with your authenticator app, then
		          enter the code in the field below:
		        </p>
	
			 */
			infoMessage: () => LocalizedString
			messages: {
				/**
				 * TOTP path copied.
				 */
				totpCopied: () => LocalizedString
				/**
				 * TOTP Enabled
				 */
				success: () => LocalizedString
			}
			/**
			 * Copy TOTP path
			 */
			copyPath: () => LocalizedString
			form: {
				fields: {
					code: {
						/**
						 * Authenticator code
						 */
						label: () => LocalizedString
						/**
						 * Code is invalid
						 */
						error: () => LocalizedString
					}
				}
				controls: {
					/**
					 * Verify code
					 */
					submit: () => LocalizedString
				}
			}
		}
		editDevice: {
			/**
			 * Edit device
			 */
			title: () => LocalizedString
			messages: {
				/**
				 * Device updated.
				 */
				success: () => LocalizedString
			}
			form: {
				fields: {
					name: {
						/**
						 * Device Name
						 */
						label: () => LocalizedString
					}
					publicKey: {
						/**
						 * Device Public Key (Wireguard)
						 */
						label: () => LocalizedString
					}
				}
				controls: {
					/**
					 * Edit device
					 */
					submit: () => LocalizedString
				}
			}
		}
		deleteDevice: {
			/**
			 * Delete device
			 */
			title: () => LocalizedString
			/**
			 * Do you want to delete {deviceName} device ?
			 */
			message: (arg: { deviceName: unknown }) => LocalizedString
			/**
			 * Delete device
			 */
			submit: () => LocalizedString
			messages: {
				/**
				 * Device deleted.
				 */
				success: () => LocalizedString
			}
		}
		addDevice: {
			messages: {
				/**
				 * Device added.
				 */
				success: () => LocalizedString
			}
			web: {
				/**
				 * Add device
				 */
				title: () => LocalizedString
				steps: {
					config: {
						messages: {
							/**
							 * Config copied to clipboard
							 */
							copyConfig: () => LocalizedString
						}
						/**
						 * Device Name
						 */
						inputNameLabel: () => LocalizedString
						/**
						 * 
					        <p>
					          Please be advised that you have to download the configuration now,
					          since <strong>we do not</strong> store your private key. After this
					          dialog is closed, you <strong>will not be able</strong> to get your
					          full configuration file (with private keys, only blank template).
					        </p>
				
						 */
						warningMessage: () => LocalizedString
						/**
						 * Use provided configuration file below by scanning QR Code or importing it as file on your devices WireGuard instance.
						 */
						qrInfo: () => LocalizedString
						/**
						 * WireGuard Config File
						 */
						qrLabel: () => LocalizedString
						/**
						 * 
					          <p>
					            This configuration file can be scanned, copied or downloaded, but
					            needs to be used
					            <strong>on your device that you are adding now.</strong>
					            <a>Read more in documentation.</a>
					          </p>
						 */
						qrHelper: () => LocalizedString
						/**
						 * WireGuard Config
						 */
						qrCardTitle: () => LocalizedString
					}
					setup: {
						/**
						 * 
					        <p>
					          You need to configure WireguardVPN on your device, please visit&nbsp;
					          <a href="">documentation</a> if you don&apos;t know how to do it.
					        </p>
				
						 */
						infoMessage: () => LocalizedString
						options: {
							/**
							 * Generate key pair
							 */
							auto: () => LocalizedString
							/**
							 * Use my own public key
							 */
							manual: () => LocalizedString
						}
						form: {
							/**
							 * Generate Config
							 */
							submit: () => LocalizedString
							fields: {
								name: {
									/**
									 * Device Name
									 */
									label: () => LocalizedString
								}
								publicKey: {
									/**
									 * Provide Your Public Key
									 */
									label: () => LocalizedString
								}
							}
						}
					}
				}
			}
			desktop: {
				/**
				 * Add current device
				 */
				title: () => LocalizedString
				form: {
					/**
					 * Add this device
					 */
					submit: () => LocalizedString
					fields: {
						name: {
							/**
							 * Name
							 */
							label: () => LocalizedString
						}
					}
				}
			}
		}
		addWallet: {
			/**
			 * Add wallet
			 */
			title: () => LocalizedString
			/**
			 * In order to add a ETH wallet you will need to sign message.
			 */
			infoBox: () => LocalizedString
			form: {
				fields: {
					name: {
						/**
						 * Wallet name
						 */
						placeholder: () => LocalizedString
						/**
						 * Name
						 */
						label: () => LocalizedString
					}
					address: {
						/**
						 * Wallet address
						 */
						placeholder: () => LocalizedString
						/**
						 * Address
						 */
						label: () => LocalizedString
					}
				}
				controls: {
					/**
					 * Add wallet
					 */
					submit: () => LocalizedString
				}
			}
		}
		keyDetails: {
			/**
			 * YubiKey details
			 */
			title: () => LocalizedString
			/**
			 * Download all keys
			 */
			downloadAll: () => LocalizedString
		}
		deleteUser: {
			/**
			 * Delete account
			 */
			title: () => LocalizedString
			controls: {
				/**
				 * Delete account
				 */
				submit: () => LocalizedString
			}
			/**
			 * Do you want to delete {username} account permanently ?
			 */
			message: (arg: { username: string }) => LocalizedString
			messages: {
				/**
				 * {username} deleted.
				 */
				success: (arg: { username: string }) => LocalizedString
			}
		}
		deleteProvisioner: {
			/**
			 * Delete provisioner
			 */
			title: () => LocalizedString
			controls: {
				/**
				 * Delete provisioner
				 */
				submit: () => LocalizedString
			}
			/**
			 * Do you want to delete {id} provisioner?
			 */
			message: (arg: { id: string }) => LocalizedString
			messages: {
				/**
				 * {provisioner} deleted.
				 */
				success: (arg: { provisioner: string }) => LocalizedString
			}
		}
		changeUserPassword: {
			messages: {
				/**
				 * Password changed.
				 */
				success: () => LocalizedString
			}
			/**
			 * Change user password
			 */
			title: () => LocalizedString
			form: {
				controls: {
					/**
					 * Save new password
					 */
					submit: () => LocalizedString
				}
				fields: {
					newPassword: {
						/**
						 * New password
						 */
						label: () => LocalizedString
					}
					confirmPassword: {
						/**
						 * Repeat password
						 */
						label: () => LocalizedString
					}
				}
			}
		}
		provisionKeys: {
			/**
			 * Yubikey provisioning:
			 */
			title: () => LocalizedString
			/**
			 * The selected provisioner must have a <b>clean</b> YubiKey
		                plugged in be provisioned. To clean a used YubiKey
		                <b>gpg --card-edit </b> before provisioning.
			 */
			infoBox: () => LocalizedString
			/**
			 * Select one of the following provisioners to provision a YubiKey:
			 */
			selectionLabel: () => LocalizedString
			noData: {
				/**
				 * No workers found, waiting...
				 */
				workers: () => LocalizedString
			}
			controls: {
				/**
				 * Provision YubiKey
				 */
				submit: () => LocalizedString
			}
			messages: {
				/**
				 * Keys provisioned
				 */
				success: () => LocalizedString
				/**
				 * Error while getting worker status.
				 */
				errorStatus: () => LocalizedString
			}
		}
		addUser: {
			/**
			 * Add new user
			 */
			title: () => LocalizedString
			form: {
				/**
				 * Add user
				 */
				submit: () => LocalizedString
				fields: {
					username: {
						/**
						 * login
						 */
						placeholder: () => LocalizedString
						/**
						 * Login
						 */
						label: () => LocalizedString
					}
					password: {
						/**
						 * Password
						 */
						placeholder: () => LocalizedString
						/**
						 * Password
						 */
						label: () => LocalizedString
					}
					email: {
						/**
						 * User e-mail
						 */
						placeholder: () => LocalizedString
						/**
						 * User e-mail
						 */
						label: () => LocalizedString
					}
					firstName: {
						/**
						 * First name
						 */
						placeholder: () => LocalizedString
						/**
						 * First name
						 */
						label: () => LocalizedString
					}
					lastName: {
						/**
						 * Last name
						 */
						placeholder: () => LocalizedString
						/**
						 * Last name
						 */
						label: () => LocalizedString
					}
					phone: {
						/**
						 * Phone
						 */
						placeholder: () => LocalizedString
						/**
						 * Phone
						 */
						label: () => LocalizedString
					}
				}
			}
		}
		webhookModal: {
			title: {
				/**
				 * Add webhook.
				 */
				addWebhook: () => LocalizedString
				/**
				 * Edit webhook
				 */
				editWebhook: () => LocalizedString
			}
			messages: {
				/**
				 * Client ID copied.
				 */
				clientIdCopy: () => LocalizedString
				/**
				 * Client secret copied.
				 */
				clientSecretCopy: () => LocalizedString
			}
			form: {
				/**
				 * Trigger events:
				 */
				triggers: () => LocalizedString
				messages: {
					/**
					 * Webhook created.
					 */
					successAdd: () => LocalizedString
					/**
					 * Webhook modified.
					 */
					successModify: () => LocalizedString
				}
				error: {
					/**
					 * URL is required.
					 */
					urlRequired: () => LocalizedString
					/**
					 * Must be a valid URL.
					 */
					validUrl: () => LocalizedString
					/**
					 * Must have at least one trigger.
					 */
					scopeValidation: () => LocalizedString
					/**
					 * Token is required.
					 */
					tokenRequired: () => LocalizedString
				}
				fields: {
					description: {
						/**
						 * Description
						 */
						label: () => LocalizedString
						/**
						 * Webhook to create gmail account on new user
						 */
						placeholder: () => LocalizedString
					}
					token: {
						/**
						 * Secret token
						 */
						label: () => LocalizedString
						/**
						 * Authorization token
						 */
						placeholder: () => LocalizedString
					}
					url: {
						/**
						 * Webhook URL
						 */
						label: () => LocalizedString
						/**
						 * https://example.com/webhook
						 */
						placeholder: () => LocalizedString
					}
					userCreated: {
						/**
						 * New user Created
						 */
						label: () => LocalizedString
					}
					userDeleted: {
						/**
						 * User deleted
						 */
						label: () => LocalizedString
					}
					userModified: {
						/**
						 * User modified
						 */
						label: () => LocalizedString
					}
					hwkeyProvision: {
						/**
						 * User Yubikey provision
						 */
						label: () => LocalizedString
					}
				}
			}
		}
		deleteWebhook: {
			/**
			 * Delete webhook
			 */
			title: () => LocalizedString
			/**
			 * Do you want to delete {name} webhook ?
			 */
			message: (arg: { name: string }) => LocalizedString
			/**
			 * Delete
			 */
			submit: () => LocalizedString
			messages: {
				/**
				 * Webhook deleted.
				 */
				success: () => LocalizedString
			}
		}
	}
	userPage: {
		title: {
			/**
			 * User Profile
			 */
			view: () => LocalizedString
			/**
			 * Edit User Profile
			 */
			edit: () => LocalizedString
		}
		messages: {
			/**
			 * User updated.
			 */
			editSuccess: () => LocalizedString
		}
		userDetails: {
			/**
			 * Profile Details
			 */
			header: () => LocalizedString
			messages: {
				/**
				 * App and all tokens deleted.
				 */
				deleteApp: () => LocalizedString
			}
			fields: {
				username: {
					/**
					 * Username
					 */
					label: () => LocalizedString
				}
				firstName: {
					/**
					 * First name
					 */
					label: () => LocalizedString
				}
				lastName: {
					/**
					 * Last name
					 */
					label: () => LocalizedString
				}
				phone: {
					/**
					 * Phone number
					 */
					label: () => LocalizedString
				}
				email: {
					/**
					 * E-mail
					 */
					label: () => LocalizedString
				}
				groups: {
					/**
					 * User groups
					 */
					label: () => LocalizedString
					/**
					 * No groups
					 */
					noData: () => LocalizedString
				}
				apps: {
					/**
					 * Authorized apps
					 */
					label: () => LocalizedString
					/**
					 * No authorized apps
					 */
					noData: () => LocalizedString
				}
			}
		}
		userAuthInfo: {
			/**
			 * Password and authentication
			 */
			header: () => LocalizedString
			password: {
				/**
				 * Password settings
				 */
				header: () => LocalizedString
				/**
				 * Change password
				 */
				changePassword: () => LocalizedString
			}
			recovery: {
				/**
				 * Recovery options
				 */
				header: () => LocalizedString
				codes: {
					/**
					 * Recovery Codes
					 */
					label: () => LocalizedString
					/**
					 * Viewed
					 */
					viewed: () => LocalizedString
				}
			}
			mfa: {
				/**
				 * Two-factor methods
				 */
				header: () => LocalizedString
				edit: {
					/**
					 * Disable MFA
					 */
					disable: () => LocalizedString
				}
				messages: {
					/**
					 * MFA disabled.
					 */
					mfaDisabled: () => LocalizedString
					/**
					 * One time password disabled.
					 */
					OTPDisabled: () => LocalizedString
					/**
					 * MFA method changed
					 */
					changeMFAMethod: () => LocalizedString
				}
				securityKey: {
					/**
					 * security key
					 */
					singular: () => LocalizedString
					/**
					 * security keys
					 */
					plural: () => LocalizedString
				}
				/**
				 * default
				 */
				'default': () => LocalizedString
				/**
				 * Enabled
				 */
				enabled: () => LocalizedString
				/**
				 * Disabled
				 */
				disabled: () => LocalizedString
				wallet: {
					/**
					 * Wallet
					 */
					singular: () => LocalizedString
					/**
					 * Wallets
					 */
					plural: () => LocalizedString
				}
				labels: {
					/**
					 * Time based one time passwords
					 */
					totp: () => LocalizedString
					/**
					 * Security keys
					 */
					webauth: () => LocalizedString
					/**
					 * Wallets
					 */
					wallets: () => LocalizedString
				}
				editMode: {
					/**
					 * Enable
					 */
					enable: () => LocalizedString
					/**
					 * Disable
					 */
					disable: () => LocalizedString
					/**
					 * Make default
					 */
					makeDefault: () => LocalizedString
					webauth: {
						/**
						 * Manage security keys
						 */
						manage: () => LocalizedString
					}
				}
			}
		}
		controls: {
			/**
			 * Edit profile
			 */
			editButton: () => LocalizedString
			/**
			 * Delete account
			 */
			deleteAccount: () => LocalizedString
		}
		devices: {
			/**
			 * User devices
			 */
			header: () => LocalizedString
			addDevice: {
				/**
				 * Add new device
				 */
				web: () => LocalizedString
				/**
				 * Add this device
				 */
				desktop: () => LocalizedString
			}
			card: {
				labels: {
					/**
					 * Last location
					 */
					location: () => LocalizedString
					/**
					 * Last IP address
					 */
					lastIpAddress: () => LocalizedString
					/**
					 * Date added
					 */
					date: () => LocalizedString
				}
				edit: {
					/**
					 * Edit device
					 */
					edit: () => LocalizedString
					/**
					 * Download config
					 */
					download: () => LocalizedString
					/**
					 * Delete device
					 */
					'delete': () => LocalizedString
				}
			}
		}
		wallets: {
			messages: {
				duplicate: {
					/**
					 * Connected wallet is already registered
					 */
					primary: () => LocalizedString
					/**
					 * Please connect unused wallet.
					 */
					sub: () => LocalizedString
				}
			}
			/**
			 * User wallets
			 */
			header: () => LocalizedString
			/**
			 * Add new wallet
			 */
			addWallet: () => LocalizedString
			card: {
				/**
				 * Address
				 */
				address: () => LocalizedString
				/**
				 * MFA
				 */
				mfaBadge: () => LocalizedString
				edit: {
					/**
					 * Enable MFA
					 */
					enableMFA: () => LocalizedString
					/**
					 * Disable MFA
					 */
					disableMFA: () => LocalizedString
					/**
					 * Delete
					 */
					'delete': () => LocalizedString
				}
				messages: {
					/**
					 * Wallet deleted
					 */
					deleteSuccess: () => LocalizedString
					/**
					 * Wallet MFA enabled
					 */
					enableMFA: () => LocalizedString
					/**
					 * Wallet MFA disabled
					 */
					disableMFA: () => LocalizedString
				}
			}
		}
		yubiKey: {
			/**
			 * User YubiKey
			 */
			header: () => LocalizedString
			/**
			 * Provision a YubiKey
			 */
			provision: () => LocalizedString
			keys: {
				/**
				 * PGP key
				 */
				pgp: () => LocalizedString
				/**
				 * SSH key
				 */
				ssh: () => LocalizedString
			}
			noLicense: {
				/**
				 * YubiKey module
				 */
				moduleName: () => LocalizedString
				/**
				 * This is enterprise module for YubiKey
				 */
				line1: () => LocalizedString
				/**
				 * management and provisioning.
				 */
				line2: () => LocalizedString
			}
		}
	}
	usersOverview: {
		/**
		 * Users
		 */
		pageTitle: () => LocalizedString
		search: {
			/**
			 * Find users
			 */
			placeholder: () => LocalizedString
		}
		filterLabels: {
			/**
			 * All users
			 */
			all: () => LocalizedString
			/**
			 * Admins only
			 */
			admin: () => LocalizedString
			/**
			 * Users only
			 */
			users: () => LocalizedString
		}
		/**
		 * All users
		 */
		usersCount: () => LocalizedString
		/**
		 * Add new
		 */
		addNewUser: () => LocalizedString
		list: {
			headers: {
				/**
				 * User name
				 */
				name: () => LocalizedString
				/**
				 * Login
				 */
				username: () => LocalizedString
				/**
				 * Phone
				 */
				phone: () => LocalizedString
				/**
				 * Actions
				 */
				actions: () => LocalizedString
			}
			editButton: {
				/**
				 * Change password
				 */
				changePassword: () => LocalizedString
				/**
				 * Edit account
				 */
				edit: () => LocalizedString
				/**
				 * Provision YubiKey
				 */
				provision: () => LocalizedString
				/**
				 * Delete account
				 */
				'delete': () => LocalizedString
			}
		}
	}
	navigation: {
		bar: {
			/**
			 * VPN Wizard
			 */
			wizard: () => LocalizedString
			/**
			 * VPN Overview
			 */
			overview: () => LocalizedString
			/**
			 * Users
			 */
			users: () => LocalizedString
			/**
			 * Yubikey
			 */
			provisioners: () => LocalizedString
			/**
			 * Webhooks
			 */
			webhooks: () => LocalizedString
			/**
			 * OpenID Apps
			 */
			openId: () => LocalizedString
			/**
			 * My Profile
			 */
			myProfile: () => LocalizedString
			/**
			 * Settings
			 */
			settings: () => LocalizedString
			/**
			 * Log out
			 */
			logOut: () => LocalizedString
		}
		mobileTitles: {
			/**
			 * VPN Wizard
			 */
			wizard: () => LocalizedString
			/**
			 * Users
			 */
			users: () => LocalizedString
			/**
			 * Defguard Global Settings
			 */
			settings: () => LocalizedString
			/**
			 * User Profile
			 */
			user: () => LocalizedString
			/**
			 * Yubikey
			 */
			provisioners: () => LocalizedString
			/**
			 * Webhooks
			 */
			webhooks: () => LocalizedString
			/**
			 * OpenId Apps
			 */
			openId: () => LocalizedString
			/**
			 * Network Overview
			 */
			overview: () => LocalizedString
			/**
			 * Network Settings
			 */
			networkSettings: () => LocalizedString
		}
		/**
		 * Copyright © 2023
		 */
		copyright: () => LocalizedString
		/**
		 * Application version: {version}
		 */
		version: (arg: { version: string }) => LocalizedString
	}
	form: {
		/**
		 * Download
		 */
		download: () => LocalizedString
		/**
		 * Copy
		 */
		copy: () => LocalizedString
		/**
		 * Save changes
		 */
		saveChanges: () => LocalizedString
		/**
		 * Submit
		 */
		submit: () => LocalizedString
		/**
		 * Sign in
		 */
		login: () => LocalizedString
		/**
		 * Cancel
		 */
		cancel: () => LocalizedString
		/**
		 * Close
		 */
		close: () => LocalizedString
		placeholders: {
			/**
			 * Password
			 */
			password: () => LocalizedString
			/**
			 * Username
			 */
			username: () => LocalizedString
		}
		error: {
			/**
			 * Username is already in use
			 */
			usernameTaken: () => LocalizedString
			/**
			 * Key is invalid.
			 */
			invalidKey: () => LocalizedString
			/**
			 * Field is invalid.
			 */
			invalid: () => LocalizedString
			/**
			 * Field is required.
			 */
			required: () => LocalizedString
			/**
			 * Maximum length exceeded.
			 */
			maximumLength: () => LocalizedString
			/**
			 * Minimum length not reached.
			 */
			minimumLength: () => LocalizedString
			/**
			 * No special characters are allowed.
			 */
			noSpecialChars: () => LocalizedString
			/**
			 * One digit required.
			 */
			oneDigit: () => LocalizedString
			/**
			 * Special character required.
			 */
			oneSpecial: () => LocalizedString
			/**
			 * One uppercase character required.
			 */
			oneUppercase: () => LocalizedString
			/**
			 * One lowercase character required.
			 */
			oneLowercase: () => LocalizedString
			/**
			 * Maximum port is 65535.
			 */
			portMax: () => LocalizedString
			/**
			 * Enter a valid endpoint.
			 */
			endpoint: () => LocalizedString
			/**
			 * Enter a valid address.
			 */
			address: () => LocalizedString
			/**
			 * Enter a valid port.
			 */
			validPort: () => LocalizedString
			/**
			 * Code should have 6 digits.
			 */
			validCode: () => LocalizedString
			/**
			 * Only valid IP or domain is allowed.
			 */
			allowedIps: () => LocalizedString
		}
		floatingErrors: {
			/**
			 * Please correct the following:
			 */
			title: () => LocalizedString
		}
	}
	components: {
		noLicenseBox: {
			footer: {
				/**
				 * Get an enterprise license
				 */
				get: () => LocalizedString
				/**
				 * by contacting:
				 */
				contact: () => LocalizedString
			}
		}
	}
	settingsPage: {
		/**
		 * Global Settings
		 */
		title: () => LocalizedString
		messages: {
			/**
			 * Settings updated
			 */
			editSuccess: () => LocalizedString
			/**
			 * Challenge message changed
			 */
			challengeSuccess: () => LocalizedString
		}
		modulesVisibility: {
			/**
			 * Modules Visibility
			 */
			header: () => LocalizedString
			/**
			 * <p>
		            If your not using some modules you can disable their visibility.
		          </p>
		          <a href="defguard.gitbook.io" target="_blank">
		            Read more in documentation.
		          </a>
			 */
			helper: () => LocalizedString
			fields: {
				wireguard_enabled: {
					/**
					 * Wireguard VPN
					 */
					label: () => LocalizedString
				}
				webhooks_enabled: {
					/**
					 * Webhooks
					 */
					label: () => LocalizedString
				}
				web3_enabled: {
					/**
					 * Web3
					 */
					label: () => LocalizedString
				}
				worker_enabled: {
					/**
					 * YubiBridge
					 */
					label: () => LocalizedString
				}
				openid_enabled: {
					/**
					 * OpenID connect
					 */
					label: () => LocalizedString
				}
				oauth_enabled: {
					/**
					 * OAuth2
					 */
					label: () => LocalizedString
				}
			}
		}
		defaultNetworkSelect: {
			/**
			 * Default network view
			 */
			header: () => LocalizedString
			/**
			 * <p>Here you can change your default network view.</p>
		          <a href="defguard.gitbook.io" target="_blank">
		            Read more in documentation.
		          </a>
			 */
			helper: () => LocalizedString
			filterLabels: {
				/**
				 * Grid view
				 */
				grid: () => LocalizedString
				/**
				 * List view
				 */
				list: () => LocalizedString
			}
		}
		web3Settings: {
			/**
			 * Web3 / Wallet connect
			 */
			header: () => LocalizedString
			fields: {
				signMessage: {
					/**
					 * Default sign message template
					 */
					label: () => LocalizedString
				}
			}
			controls: {
				/**
				 * Save changes
				 */
				save: () => LocalizedString
			}
		}
		instanceBranding: {
			/**
			 * Instance Branding
			 */
			header: () => LocalizedString
			form: {
				/**
				 * Name & Logo:
				 */
				title: () => LocalizedString
				fields: {
					instanceName: {
						/**
						 * Instance name
						 */
						label: () => LocalizedString
						/**
						 * Defguard
						 */
						placeholder: () => LocalizedString
					}
					mainLogoUrl: {
						/**
						 * Login logo url
						 */
						label: () => LocalizedString
						/**
						 * <p>Maximum picture size is 250x100  px</p>
						 */
						helper: () => LocalizedString
						/**
						 * Default image
						 */
						placeholder: () => LocalizedString
					}
					navLogoUrl: {
						/**
						 * Menu & navigation small logo
						 */
						label: () => LocalizedString
						/**
						 * <p>Maximum picture size is 100x100 px</p>
						 */
						helper: () => LocalizedString
						/**
						 * Default image
						 */
						placeholder: () => LocalizedString
					}
				}
				controls: {
					/**
					 * Restore default
					 */
					restoreDefault: () => LocalizedString
					/**
					 * Save changes
					 */
					submit: () => LocalizedString
				}
			}
			/**
			 * 
					      <p>
		            Here you can add url of your logo and name for your defguard
		            instance it will be displayed instead of defguard.
		          </p>
		          <a href="defguard.gitbook.io" target="_blank">
		            Read more in documentation.
		          </a>
				
			 */
			helper: () => LocalizedString
		}
		licenseCard: {
			/**
			 * License & Support Information
			 */
			header: () => LocalizedString
			licenseCardTitles: {
				/**
				 * Community
				 */
				community: () => LocalizedString
				/**
				 * Enterprise
				 */
				enterprise: () => LocalizedString
				/**
				 * license
				 */
				license: () => LocalizedString
			}
			body: {
				/**
				 * 
							<p> Thank you for purchasing enterprise license!</p>
							<br />
							<p>This includes following modules:</p>
				 */
				enterprise: () => LocalizedString
				/**
				 * 
			              <p>
			                You have our community license. If you wish to get Enterprise
			                license for full features set and support, please visit
			                <a href="https://defguard.net">https://defguard.net</a>
			              </p>
			              <br />
			              <p>Enterprise license includes:</p>
						
				 */
				community: () => LocalizedString
				/**
				 * read license agreement
				 */
				agreement: () => LocalizedString
				/**
				 * 
			          <ul>
			            <li>YubiBridge</li>
			            <li>OpenID</li>
			            <li>OpenLDAP</li>
			          </ul>
			          <br />
				 */
				modules: () => LocalizedString
			}
			footer: {
				/**
				 * licensed to: {company}
				 */
				company: (arg: { company: string }) => LocalizedString
				/**
				 * expiration date: {expiration}
				 */
				expiration: (arg: { expiration: string }) => LocalizedString
			}
		}
		supportCard: {
			/**
			 * Support
			 */
			title: () => LocalizedString
			/**
			 * 
		Before contacting or submitting any issues to GitHub please get familiar with Defguard documentation available at [defguard.gitbook.io/defguard](https://defguard.gitbook.io/defguard/)
	
		To submit:
		* Bugs - please go to [GitHub](https://github.com/DefGuard/defguard/issues/new?assignees=&labels=bug&template=bug_report.md&title=)
		* Feature request - please go to [GitHub](https://github.com/DefGuard/defguard/issues/new?assignees=&labels=feature&template=feature_request.md&title=)
	
		Any other requests you can reach us at: support@defguard.net
	
			 */
			body: () => LocalizedString
		}
	}
	openidOverview: {
		/**
		 * OpenID Apps
		 */
		pageTitle: () => LocalizedString
		search: {
			/**
			 * Find apps
			 */
			placeholder: () => LocalizedString
		}
		filterLabels: {
			/**
			 * All apps
			 */
			all: () => LocalizedString
			/**
			 * Enabled
			 */
			enabled: () => LocalizedString
			/**
			 * Disabled
			 */
			disabled: () => LocalizedString
		}
		/**
		 * All apps
		 */
		clientCount: () => LocalizedString
		/**
		 * Add new
		 */
		addNewApp: () => LocalizedString
		list: {
			headers: {
				/**
				 * Name
				 */
				name: () => LocalizedString
				/**
				 * Status
				 */
				status: () => LocalizedString
				/**
				 * Actions
				 */
				actions: () => LocalizedString
			}
			editButton: {
				/**
				 * Edit app
				 */
				edit: () => LocalizedString
				/**
				 * Delete app
				 */
				'delete': () => LocalizedString
				/**
				 * Disable
				 */
				disable: () => LocalizedString
				/**
				 * Enable
				 */
				enable: () => LocalizedString
				/**
				 * Copy client ID
				 */
				copy: () => LocalizedString
			}
			status: {
				/**
				 * Enabled
				 */
				enabled: () => LocalizedString
				/**
				 * Disabled
				 */
				disabled: () => LocalizedString
			}
		}
		messages: {
			/**
			 * Client ID copied.
			 */
			copySuccess: () => LocalizedString
			/**
			 * You don't have a license for this feature.
			 */
			noLicenseMessage: () => LocalizedString
			/**
			 * No results found.
			 */
			noClientsFound: () => LocalizedString
		}
		deleteApp: {
			/**
			 * Delete app
			 */
			title: () => LocalizedString
			/**
			 * Do you want to delete {appName} app ?
			 */
			message: (arg: { appName: string }) => LocalizedString
			/**
			 * Delete app
			 */
			submit: () => LocalizedString
			messages: {
				/**
				 * App deleted.
				 */
				success: () => LocalizedString
			}
		}
		enableApp: {
			messages: {
				/**
				 * App enabled.
				 */
				success: () => LocalizedString
			}
		}
		disableApp: {
			messages: {
				/**
				 * App disabled.
				 */
				success: () => LocalizedString
			}
		}
		modals: {
			openidClientModal: {
				title: {
					/**
					 * Add Application
					 */
					addApp: () => LocalizedString
					/**
					 * Edit {appName} app
					 */
					editApp: (arg: { appName: string }) => LocalizedString
				}
				/**
				 * Scopes:
				 */
				scopes: () => LocalizedString
				messages: {
					/**
					 * Client ID copied.
					 */
					clientIdCopy: () => LocalizedString
					/**
					 * Client secret copied.
					 */
					clientSecretCopy: () => LocalizedString
				}
				form: {
					messages: {
						/**
						 * App created.
						 */
						successAdd: () => LocalizedString
						/**
						 * App modified.
						 */
						successModify: () => LocalizedString
					}
					error: {
						/**
						 * URL is required.
						 */
						urlRequired: () => LocalizedString
						/**
						 * Must be a valid URL.
						 */
						validUrl: () => LocalizedString
						/**
						 * Must have at least one scope.
						 */
						scopeValidation: () => LocalizedString
					}
					fields: {
						name: {
							/**
							 * App name
							 */
							label: () => LocalizedString
						}
						redirectUri: {
							/**
							 * Redirect URL {count}
							 */
							label: (arg: { count: number }) => LocalizedString
							/**
							 * https://example.com/redirect
							 */
							placeholder: () => LocalizedString
						}
						openid: {
							/**
							 * OpenID
							 */
							label: () => LocalizedString
						}
						profile: {
							/**
							 * Profile
							 */
							label: () => LocalizedString
						}
						email: {
							/**
							 * Email
							 */
							label: () => LocalizedString
						}
						phone: {
							/**
							 * Phone
							 */
							label: () => LocalizedString
						}
					}
					controls: {
						/**
						 * Add URL
						 */
						addUrl: () => LocalizedString
					}
				}
				/**
				 * Client ID
				 */
				clientId: () => LocalizedString
				/**
				 * Client secret
				 */
				clientSecret: () => LocalizedString
			}
		}
	}
	webhooksOverview: {
		/**
		 * Webhooks
		 */
		pageTitle: () => LocalizedString
		search: {
			/**
			 * Find webhooks by url
			 */
			placeholder: () => LocalizedString
		}
		filterLabels: {
			/**
			 * All webhooks
			 */
			all: () => LocalizedString
			/**
			 * Enabled
			 */
			enabled: () => LocalizedString
			/**
			 * Disabled
			 */
			disabled: () => LocalizedString
		}
		/**
		 * All webhooks
		 */
		webhooksCount: () => LocalizedString
		/**
		 * Add new
		 */
		addNewWebhook: () => LocalizedString
		/**
		 * No webhooks found.
		 */
		noWebhooksFound: () => LocalizedString
		list: {
			headers: {
				/**
				 * Name
				 */
				name: () => LocalizedString
				/**
				 * Description
				 */
				description: () => LocalizedString
				/**
				 * Status
				 */
				status: () => LocalizedString
				/**
				 * Actions
				 */
				actions: () => LocalizedString
			}
			editButton: {
				/**
				 * Edit
				 */
				edit: () => LocalizedString
				/**
				 * Delete webhook
				 */
				'delete': () => LocalizedString
				/**
				 * Disable
				 */
				disable: () => LocalizedString
				/**
				 * Enable
				 */
				enable: () => LocalizedString
			}
			status: {
				/**
				 * Enabled
				 */
				enabled: () => LocalizedString
				/**
				 * Disabled
				 */
				disabled: () => LocalizedString
			}
		}
	}
	provisionersOverview: {
		/**
		 * Provisioners
		 */
		pageTitle: () => LocalizedString
		search: {
			/**
			 * Find provisioners
			 */
			placeholder: () => LocalizedString
		}
		filterLabels: {
			/**
			 * All
			 */
			all: () => LocalizedString
			/**
			 * Available
			 */
			available: () => LocalizedString
			/**
			 * Unavailable
			 */
			unavailable: () => LocalizedString
		}
		/**
		 * All provisioners
		 */
		provisionersCount: () => LocalizedString
		/**
		 * No provisioners found.
		 */
		noProvisionersFound: () => LocalizedString
		/**
		 * You don't have a license for this feature.
		 */
		noLicenseMessage: () => LocalizedString
		provisioningStation: {
			/**
			 * YubiKey provisioning station
			 */
			header: () => LocalizedString
			/**
			 * Provisioning station setup command
			 */
			cardTitle: () => LocalizedString
			/**
			 * In order to be able to provision your YubiKeys, first you need to set up
		        physical machine with USB slot. Run provided command on your chosen
		        machine to register it and start provisioning your keys.
			 */
			content: () => LocalizedString
		}
		/**
		 * <p>
	              <strong>YubiKey module</strong>
	            </p>
	            <br />
	            <p>This is enterprise module for YubiKey</p>
	            <p>management and provisioning.</p>
		 */
		noLicenseBox: () => LocalizedString
		list: {
			headers: {
				/**
				 * Name
				 */
				name: () => LocalizedString
				/**
				 * IP address
				 */
				ip: () => LocalizedString
				/**
				 * Status
				 */
				status: () => LocalizedString
				/**
				 * Actions
				 */
				actions: () => LocalizedString
			}
			editButton: {
				/**
				 * Delete provisioner
				 */
				'delete': () => LocalizedString
			}
			status: {
				/**
				 * Available
				 */
				available: () => LocalizedString
				/**
				 * Unavailable
				 */
				unavailable: () => LocalizedString
			}
		}
		messages: {
			/**
			 * Command copied.
			 */
			codeCopied: () => LocalizedString
		}
	}
	openidAllow: {
		/**
		 * {name} would like to:
		 */
		header: (arg: { name: string }) => LocalizedString
		scopes: {
			/**
			 * Use your profile data for future logins.
			 */
			openid: () => LocalizedString
			/**
			 * Know basic information from your profile like name, profile picture etc.
			 */
			profile: () => LocalizedString
			/**
			 * Know your email address.
			 */
			email: () => LocalizedString
			/**
			 * Know your phone number.
			 */
			phone: () => LocalizedString
		}
		controls: {
			/**
			 * Accept
			 */
			accept: () => LocalizedString
			/**
			 * Cancel
			 */
			cancel: () => LocalizedString
		}
	}
	networkOverview: {
		/**
		 * Network overview
		 */
		pageTitle: () => LocalizedString
		controls: {
			/**
			 * Edit network settings
			 */
			editNetwork: () => LocalizedString
			/**
			 * Configure network settings
			 */
			configureNetwork: () => LocalizedString
		}
		filterLabels: {
			/**
			 * Grid view
			 */
			grid: () => LocalizedString
			/**
			 * List view
			 */
			list: () => LocalizedString
		}
		stats: {
			/**
			 * Currently active users
			 */
			currentlyActiveUsers: () => LocalizedString
			/**
			 * Currently active devices
			 */
			currentlyActiveDevices: () => LocalizedString
			/**
			 * Active users in {hour}H
			 */
			activeUsersFilter: (arg: { hour: number }) => LocalizedString
			/**
			 * Active devices in {hour}H
			 */
			activeDevicesFilter: (arg: { hour: number }) => LocalizedString
			/**
			 * Total transfer:
			 */
			totalTransfer: () => LocalizedString
			/**
			 * Activity in {hour}H
			 */
			activityIn: (arg: { hour: number }) => LocalizedString
			/**
			 * In:
			 */
			'in': () => LocalizedString
			/**
			 * Out:
			 */
			out: () => LocalizedString
			/**
			 * Gateway disconnected
			 */
			gatewayDisconnected: () => LocalizedString
		}
	}
	connectedUsersOverview: {
		/**
		 * Connected users
		 */
		pageTitle: () => LocalizedString
		/**
		 * Currently there are no connected users
		 */
		noUsersMessage: () => LocalizedString
		userList: {
			/**
			 * Username
			 */
			username: () => LocalizedString
			/**
			 * Device
			 */
			device: () => LocalizedString
			/**
			 * Connected
			 */
			connected: () => LocalizedString
			/**
			 * Device location
			 */
			deviceLocation: () => LocalizedString
			/**
			 * Network usage
			 */
			networkUsage: () => LocalizedString
		}
	}
	networkPage: {
		/**
		 * Edit network
		 */
		pageTitle: () => LocalizedString
	}
	activityOverview: {
		/**
		 * Activity stream
		 */
		header: () => LocalizedString
		/**
		 * Currently there is no activity detected
		 */
		noData: () => LocalizedString
	}
	networkConfiguration: {
		/**
		 * Network configuration
		 */
		header: () => LocalizedString
		/**
		 * Network import
		 */
		importHeader: () => LocalizedString
		form: {
			messages: {
				/**
				 * Based on this address VPN network address will be defined, eg. 10.10.10.1/24 (and VPN network will be: 10.10.10.0/24)
				 */
				address: () => LocalizedString
				/**
				 * Gateway public address, used by VPN users to connect
				 */
				gateway: () => LocalizedString
				/**
				 * Specify the DNS resolvers to query when the wireguard interface is up.
				 */
				dns: () => LocalizedString
				/**
				 * List of addresses/masks that should be routed through the VPN network.
				 */
				allowedIps: () => LocalizedString
				/**
				 * Network modified.
				 */
				networkModified: () => LocalizedString
				/**
				 * Network created.
				 */
				networkCreated: () => LocalizedString
			}
			fields: {
				name: {
					/**
					 * Network name
					 */
					label: () => LocalizedString
				}
				address: {
					/**
					 * Gateway VPN IP address and netmask
					 */
					label: () => LocalizedString
				}
				endpoint: {
					/**
					 * Gateway address
					 */
					label: () => LocalizedString
				}
				allowedIps: {
					/**
					 * Allowed Ips
					 */
					label: () => LocalizedString
				}
				port: {
					/**
					 * Gateway port
					 */
					label: () => LocalizedString
				}
				dns: {
					/**
					 * DNS
					 */
					label: () => LocalizedString
				}
			}
			controls: {
				/**
				 * Save changes
				 */
				submit: () => LocalizedString
				/**
				 * Back
				 */
				cancel: () => LocalizedString
			}
		}
	}
	gatewaySetup: {
		/**
		 * Gateway server setup
		 */
		header: () => LocalizedString
		card: {
			/**
			 * Docker based gateway setup
			 */
			title: () => LocalizedString
		}
		controls: {
			/**
			 * Check connection status
			 */
			status: () => LocalizedString
		}
		messages: {
			/**
			 * 
		          <p>
		            Defguard requires to deploy a gateway node to control wireguard VPN on the vpn server.
		            More details can be found in the <a href="https://defguard.gitbook.io/defguard/features/setting-up-your-instance/gateway" target="_blank">documentation</a>.
		            There are several ways to deploy the gateway server,
		            below is a Docker based example, for other examples please visit <a href="https://defguard.gitbook.io/defguard/features/setting-up-your-instance/gateway" target="_blank">documentation</a>.
		          </p>
			 */
			runCommand: () => LocalizedString
			/**
			 * 
		          <p>
		            Please create the network before running the gateway process.
		          </p>
			 */
			createNetwork: () => LocalizedString
			/**
			 * <p>No connection established, please run provided command.</p>
			 */
			noConnection: () => LocalizedString
			/**
			 * <p>Gateway connected.</p>
			 */
			connected: () => LocalizedString
			/**
			 * Failed to get gateway status
			 */
			statusError: () => LocalizedString
		}
	}
	loginPage: {
		/**
		 * Enter your credentials
		 */
		pageTitle: () => LocalizedString
		mfa: {
			/**
			 * Two-factor authentication
			 */
			title: () => LocalizedString
			controls: {
				/**
				 * Use Authenticator app instead
				 */
				useAuthenticator: () => LocalizedString
				/**
				 * Use your wallet instead
				 */
				useWallet: () => LocalizedString
				/**
				 * Use security key instead
				 */
				useWebauthn: () => LocalizedString
				/**
				 * Use recovery code instead
				 */
				useRecoveryCode: () => LocalizedString
			}
			totp: {
				/**
				 * Use code from your authentication app and click button to proceed.
				 */
				header: () => LocalizedString
				form: {
					fields: {
						code: {
							/**
							 * Enter Authenticator code
							 */
							placeholder: () => LocalizedString
						}
					}
					controls: {
						/**
						 * Use authenticator code
						 */
						submit: () => LocalizedString
					}
				}
			}
			recoveryCode: {
				/**
				 * Enter one of active recovery codes and click button to log in.
				 */
				header: () => LocalizedString
				form: {
					fields: {
						code: {
							/**
							 * Recovery code
							 */
							placeholder: () => LocalizedString
						}
					}
					controls: {
						/**
						 * Use recovery code
						 */
						submit: () => LocalizedString
					}
				}
			}
			wallet: {
				/**
				 * Use your crypto wallet to sign in, please sign message in your wallet app or extension.
				 */
				header: () => LocalizedString
				controls: {
					/**
					 * Use your wallet
					 */
					submit: () => LocalizedString
				}
				messages: {
					/**
					 * Wallet was disconnected during signing process.
					 */
					walletError: () => LocalizedString
					/**
					 * Wallet is not authorized for MFA login. Please use authorized wallet.
					 */
					walletErrorMfa: () => LocalizedString
				}
			}
			webauthn: {
				/**
				 * When you are ready to authenticate, press the button below.
				 */
				header: () => LocalizedString
				controls: {
					/**
					 * Use security key
					 */
					submit: () => LocalizedString
				}
				messages: {
					/**
					 * Failed to read key. Please try again.
					 */
					error: () => LocalizedString
				}
			}
		}
	}
	wizard: {
		/**
		 * Network setup completed
		 */
		completed: () => LocalizedString
		configuration: {
			/**
			 * Network created
			 */
			successMessage: () => LocalizedString
		}
		welcome: {
			/**
			 * Welcome to defguard!
			 */
			header: () => LocalizedString
			/**
			 * Before you start, you need to setup your network environment first. When in doubt hover on <React> icon.
			 */
			sub: () => LocalizedString
		}
		navigation: {
			/**
			 * Network setup
			 */
			top: () => LocalizedString
			titles: {
				/**
				 * Network setup
				 */
				welcome: () => LocalizedString
				/**
				 * Chose network setup
				 */
				choseNetworkSetup: () => LocalizedString
				/**
				 * Import existing network
				 */
				importConfig: () => LocalizedString
				/**
				 * Configure network
				 */
				manualConfig: () => LocalizedString
				/**
				 * Map imported devices
				 */
				mapDevices: () => LocalizedString
			}
			buttons: {
				/**
				 * Next
				 */
				next: () => LocalizedString
				/**
				 * Back
				 */
				back: () => LocalizedString
			}
		}
		deviceMap: {
			/**
			 * Devices added
			 */
			crateSuccess: () => LocalizedString
			list: {
				headers: {
					/**
					 * Device Name
					 */
					deviceName: () => LocalizedString
					/**
					 * IP
					 */
					deviceIP: () => LocalizedString
					/**
					 * User
					 */
					user: () => LocalizedString
				}
			}
		}
		wizardType: {
			manual: {
				/**
				 * Manual Configuration
				 */
				title: () => LocalizedString
				/**
				 * Manual network configuration
				 */
				description: () => LocalizedString
			}
			'import': {
				/**
				 * Import From File
				 */
				title: () => LocalizedString
				/**
				 * Import from WireGuard config file
				 */
				description: () => LocalizedString
			}
			/**
			 * Create WireGuard network
			 */
			createNetwork: () => LocalizedString
		}
		common: {
			/**
			 * Select
			 */
			select: () => LocalizedString
		}
		locations: {
			form: {
				/**
				 * Name
				 */
				name: () => LocalizedString
				/**
				 * IP address
				 */
				ip: () => LocalizedString
				/**
				 * User
				 */
				user: () => LocalizedString
				/**
				 * File
				 */
				fileName: () => LocalizedString
				/**
				 * Select file
				 */
				selectFile: () => LocalizedString
				messages: {
					/**
					 * Devices created
					 */
					devicesCreated: () => LocalizedString
				}
				validation: {
					/**
					 * Invalid address
					 */
					invalidAddress: () => LocalizedString
				}
			}
		}
	}
}

export type Formatters = {}
