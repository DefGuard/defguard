@use '@shared/scss/base/variables' as v;
@use '@shared/scss/helpers/bootstrap' as bs;
@use '@shared/scss/helpers/mixins' as mix;

.provisioners-page {
  .page-content {
    height: inherit;
    position: relative;

    & > header {
      display: flex;
      flex-direction: row;
      align-items: center;
      align-content: center;
      justify-content: flex-start;
      width: 100%;
      column-gap: 3rem;
      @include bs.media-breakpoint-up(md) {
        padding: 4rem 6rem 4.5rem;
        box-sizing: border-box;
      }

      h1 {
        @include mix.header;

        font-size: 4.1rem;
      }

      .search {
        width: clamp(100px, 360px, 360px);
        height: 40px;
      }
    }

    .actions {
      width: 100%;
      display: flex;
      flex-direction: row;
      align-content: center;
      align-items: center;
      justify-content: flex-start;
      @include bs.media-breakpoint-down(md) {
        margin: 1.5rem 0;
        height: 40px;
        box-sizing: border-box;
        padding: 0 2.1rem 0 2rem;
      }
      @include bs.media-breakpoint-up(md) {
        // margin-bottom: 2rem;
        padding: 0 6rem 2.7rem;
        box-sizing: border-box;
      }

      .provisioners-count {
        display: flex;
        flex-direction: row;
        align-content: center;
        align-items: center;
        justify-content: flex-start;
        column-gap: 1rem;

        & > span {
          @include mix.poppins;
          @include mix.text-weight(semiBold);
          @include bs.media-breakpoint-down(md) {
            font-size: 1.5rem;
            line-height: 2.1rem;
          }
          @include bs.media-breakpoint-up(md) {
            font-size: 2rem;
            line-height: 2.8rem;
          }
        }

        .count {
          display: flex;
          flex-direction: column;
          align-content: center;
          align-items: center;
          justify-content: center;
          height: 30px;
          width: 30px;
          background-color: v.$gray-light;
          border-radius: 1rem;

          & > span {
            @include mix.poppins;

            font-size: 1.2rem;
            color: v.$white;
            @include mix.text-weight(semiBold);

            line-height: 1.7rem;
          }
        }
      }
    }

    .search {
      @include bs.media-breakpoint-down(md) {
        width: calc(100% - 2rem - 2.1rem);
        margin-left: 2rem;
        margin-bottom: 1.5rem;
      }
    }
  }
}

.provisioning-container {
  display: flex;
  margin-right: 6rem;
  column-gap: 2rem;

  @include bs.media-breakpoint-down(lg) {
    flex-direction: column;
    margin-left: 2rem;
    margin-right: 2rem;
    padding-bottom: 50px;
  }
}

.column {
  display: flex;
  flex: 1;
  flex-direction: column;
}

.provisioning-station-setup {
  background-color: v.$white;
  justify-content: center;
  align-items: center;
  padding: 4rem 3rem;
  row-gap: 3rem;
  border-radius: 1.5rem;
  flex: 0.6;

  @include bs.media-breakpoint-down(lg) {
    margin: 2rem 3rem 3rem;
  }

  .yubikey-graphic {
    margin-top: 3rem;
    margin-bottom: 1rem;
    display: flex;
    flex: 1;
    justify-content: center;
  }

  h4 {
    text-align: center;
    margin-bottom: 2rem;
  }

  p {
    text-align: center;
    color: v.$gray-light;
    font-size: 1.4rem;
    line-height: 1.5;
  }

  & > .content {
    background-color: v.$white;
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

.unavailable {
  opacity: 0.5;
}
